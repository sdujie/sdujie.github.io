<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>墨白</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-24T13:29:02.280Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Zotero软件翻译原地复活</title>
    <link href="http://example.com/2022/10/24/Zotero%E7%BF%BB%E8%AF%91%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%9C%B0%E5%A4%8D%E6%B4%BB/"/>
    <id>http://example.com/2022/10/24/Zotero%E7%BF%BB%E8%AF%91%E5%8A%9F%E8%83%BD%E5%8E%9F%E5%9C%B0%E5%A4%8D%E6%B4%BB/</id>
    <published>2022-10-24T00:38:47.000Z</published>
    <updated>2022-10-24T13:29:02.280Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Zotero软件翻译功能原地复活"><a href="#Zotero软件翻译功能原地复活" class="headerlink" title="Zotero软件翻译功能原地复活"></a>Zotero软件翻译功能原地复活</h1><p>必备科研软件-Zotero的翻译功能可能收到某种不知名的影响，导致无法正常使用，本文推荐一种简便快捷的方式，让你的Zotero软件的翻译功能冲出江湖！废话不多说，下面开始正文。</p><p>step1：打开我的电脑→C盘→windows文件夹→system32文件夹→drivers文件夹→etc</p><p>step2：在etc文件夹中找到host文件，选择记事本打开</p><p>step3：在最后一行输入下面的内容：</p><p>203.208.39.194 translate.googleapis.com</p><p>step4：保存退出，重新打开Zotero，选在谷歌翻译，成功！</p><p><a href="https://imgtg.com/image/J291G"><img src="https://i.imgtg.com/2022/10/18/J291G.md.png" alt="J291G.md.png"></a></p><h3 id="更新：（2022-10-24）"><a href="#更新：（2022-10-24）" class="headerlink" title="更新：（2022.10.24）"></a>更新：（2022.10.24）</h3><p>新的地址为：142.250.4.90 translate.googleapis.com</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Zotero软件翻译功能原地复活&quot;&gt;&lt;a href=&quot;#Zotero软件翻译功能原地复活&quot; class=&quot;headerlink&quot; title=&quot;Zotero软件翻译功能原地复活&quot;&gt;&lt;/a&gt;Zotero软件翻译功能原地复活&lt;/h1&gt;&lt;p&gt;必备科研软件-Zotero的</summary>
      
    
    
    
    <category term="科研工具" scheme="http://example.com/categories/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Zotero" scheme="http://example.com/tags/Zotero/"/>
    
  </entry>
  
  <entry>
    <title>系统美化</title>
    <link href="http://example.com/2022/05/09/%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96/"/>
    <id>http://example.com/2022/05/09/%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96/</id>
    <published>2022-05-09T03:12:08.000Z</published>
    <updated>2022-10-18T05:29:39.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="系统美化之桌面美化"><a href="#系统美化之桌面美化" class="headerlink" title="系统美化之桌面美化"></a>系统美化之桌面美化</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>你的桌面是否文件很多，杂乱不堪，整理起来十分费劲，这篇文章将带你很简便的”清理“桌面！彻底告别乱糟糟的桌面！</p><h2 id="一、效果图"><a href="#一、效果图" class="headerlink" title="一、效果图"></a>一、效果图</h2><p>废话不多说，先上图：</p><details class="folding-tag" cyan><summary> 点击 </summary>              <div class='content'>              <p><img src="https://s1.ax1x.com/2022/05/09/O8qam8.png" alt="O8qam8.png"></p><p><img src="https://s1.ax1x.com/2022/05/09/O8qt6P.png" alt="O8qt6P.png"></p>              </div>            </details><h2 id="二、美化步骤"><a href="#二、美化步骤" class="headerlink" title="二、美化步骤"></a>二、美化步骤</h2><details class="folding-tag" yellow><summary> 点击 </summary>              <div class='content'>              <h4 id="1-桌面抽屉"><a href="#1-桌面抽屉" class="headerlink" title="1.桌面抽屉"></a>1.桌面抽屉</h4><p>下载轻量版桌面抽屉</p><p>点击<a href="https://pan.baidu.com/s/1NirIeBsjUkBu2N16DskvJw?pwd=sduj">链接</a>下载酷呆桌面（Coodesker)<br>提取码：sduj </p><p>安装完成打开即可自动整理桌面文档、word等文件；如果需要，当然可以分类整理桌面图标；</p><p>在设置中可以打开实时整理；</p><p>也是将小抽屉合并、拆分等等操作；</p><p>具体步骤网上搜索很多，就不在具体介绍；</p><h4 id="2-Mac任务栏"><a href="#2-Mac任务栏" class="headerlink" title="2.Mac任务栏"></a>2.Mac任务栏</h4><p>下载bitDock，<a href="http://www.bitdock.cn/">官网</a></p><p>下载安装即可使用；</p><p>小功能大家自行探索，在设置里可以放置桌面小工具，免费的有限，如果想要更多小组件是需要开通会员的，不过免费的完全够用。</p><h4 id="3-壁纸网"><a href="#3-壁纸网" class="headerlink" title="3.壁纸网"></a>3.壁纸网</h4><p>分享几个完全免费的壁纸网站，各种超级赞的壁纸</p><p><a href="https://wallhere.com/">https://wallhere.com/</a></p><p><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p>              </div>            </details><h1 id="Edge浏览器新建标签美化"><a href="#Edge浏览器新建标签美化" class="headerlink" title="Edge浏览器新建标签美化"></a>Edge浏览器新建标签美化</h1><h2 id="一、美化效果"><a href="#一、美化效果" class="headerlink" title="一、美化效果"></a>一、美化效果</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>                            </div>            </details><h2 id="二、具体步骤"><a href="#二、具体步骤" class="headerlink" title="二、具体步骤"></a>二、具体步骤</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>打开edge浏览器→扩展→获取 Microsoft Edge 扩展；</p><p>搜索iTab插件，安装即可；</p><p>安装完成后点击+新标签页即可查看效果；</p><p>安装此款插件的目的不仅仅在于新标签页的美化，他也给我们提供了很多便捷网站的入口；</p><p>完全免费良心插件！</p>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;系统美化之桌面美化&quot;&gt;&lt;a href=&quot;#系统美化之桌面美化&quot; class=&quot;headerlink&quot; title=&quot;系统美化之桌面美化&quot;&gt;&lt;/a&gt;系统美化之桌面美化&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="桌面美化" scheme="http://example.com/categories/%E6%A1%8C%E9%9D%A2%E7%BE%8E%E5%8C%96/"/>
    
    
    <category term="美化" scheme="http://example.com/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>山东大学DSP原理与应用实验4-综合实验</title>
    <link href="http://example.com/2022/05/06/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E9%AA%8C4-%E7%BB%BC%E5%90%88%E5%AE%9E%E9%AA%8C/"/>
    <id>http://example.com/2022/05/06/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E9%AA%8C4-%E7%BB%BC%E5%90%88%E5%AE%9E%E9%AA%8C/</id>
    <published>2022-05-06T07:43:29.000Z</published>
    <updated>2022-05-06T13:40:09.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="山东大学DSP原理与应用实验4-综合实验"><a href="#山东大学DSP原理与应用实验4-综合实验" class="headerlink" title="山东大学DSP原理与应用实验4-综合实验"></a>山东大学DSP原理与应用实验4-综合实验</h1><h2 id="【实验要求】"><a href="#【实验要求】" class="headerlink" title="【实验要求】"></a>【实验要求】</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>采集一段语音信号，通过抽取和插值操作，实现音调的变化，并给出频谱的变化结果。</p>              </div>            </details><h2 id="【实验原理】"><a href="#【实验原理】" class="headerlink" title="【实验原理】"></a>【实验原理】</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>(1)    语音信号的采集<br>语音信号的采集可以有两种方案，一种是截取现成的文件；另一种方案是使用matlab的语音采集功能，采集声音保存为相应的音频文件；<br>这里着重介绍使用matlab采集语音信号的原理：<br>matlab的官方参考文档及使用说明中给出了相应的解释，如下：<br>audiorecorder<br>用于录制音频的对象<br>说明<br>使用 audiorecorder 对象录制来自输入设备（如麦克风）的音频数据，以便在 MATLAB® 中进行处理。audiorecorder 对象包含在录制过程中提供额外灵活性的属性。例如，您可以使用 audiorecorder 对象函数暂停、继续或定义回调。<br>创建对象<br>语法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">recorder = audiorecorder</span><br><span class="line">recorder = audiorecorder(Fs,nBits,NumChannels)</span><br><span class="line">recorder = audiorecorder(Fs,nBits,NumChannels,ID)</span><br></pre></td></tr></table></figure><p>说明</p><p>说明</p><p>recorder = audiorecorder 创建并返回具有以下属性的 audiorecorder 对象：<br>•    采样频率 Fs = 8000 赫兹<br>•    采样位数 nBits = 8<br>•    通道数 nChannels = 1<br>recorder = audiorecorder(Fs,nBits,NumChannels) 设置采样率 Fs（以赫兹为单位）、采样位数 nBits 和通道数 nChannels。<br>recorder = audiorecorder(Fs,nBits,NumChannels,ID) 将音频输入设备设置为 ID 指定的设备。<br>输入参数<br>Fs - 采样频率<br>数值标量<br>采样频率，单位为赫兹 (Hz)，指定为数值标量。<br>采样率的有效值取决于 MATLAB 允许的采样率以及系统上的具体音频硬件。MATLAB 的硬性限制为 1000 Hz &lt;= Fs &lt;= 384000 Hz，但还存在其他基于硬件的限制。大多数声卡支持的典型值有 8000、11025、22050、44100、48000 和 96000 Hertz。<br>数据类型： single | double<br>nBits - 采样位数。<br>8 （默认） | 16 | 24<br>采样位数，指定为 8、16 或 24。<br>仅当信号 Y 包含浮点值时，才指定 nBits。nBits 的有效值取决于音频硬件。例如，根据您的音频硬件，nBits 可以是下列值之一：8、16 或 24。<br>NumChannels - 通道数<br>1（单声道） （默认） | 2（立体声）<br>通道数，指定为 1（单声道）或 2（立体声）。<br>ID - 设备标识符。<br>-1 （默认） | 整数<br>设备标识符，指定为整数。<br>要获取设备 ID，请使用 audiodevinfo 函数。<br>对象函数</p><div class="table-container"><table><thead><tr><th>get</th><th>查询 audiorecorder 对象的属性值<br/></th></tr></thead><tbody><tr><td>getaudiodata</td><td>将录制的音频信号存储在数值数组中<br/></td></tr><tr><td>getplayer</td><td>创建关联的 audioplayer 对象<br/></td></tr><tr><td>isrecording</td><td>确定录制是否正在进行<br/></td></tr><tr><td>pause</td><td>暂停播放或录制<br/></td></tr><tr><td>play</td><td>从 audiorecorder 对象播放音频<br/></td></tr><tr><td>record</td><td>将音频录制到 audiorecorder 对象中<br/></td></tr><tr><td>recordblocking</td><td>将音频录制到 audiorecorder 对象中，在录制完成前保持控制权<br/></td></tr><tr><td>resume</td><td>从暂停状态继续播放或录制<br/></td></tr><tr><td>set</td><td>设置 audiorecorder 对象的属性值<br/></td></tr><tr><td>stop</td><td>停止播放或录制<br/></td></tr></tbody></table></div><p>这里给出matlab录取音频信号的源代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">clc;clear</span><br><span class="line"><span class="comment">%语音采集</span></span><br><span class="line">Fs=<span class="number">16000</span>;                                   <span class="comment">%采样频率</span></span><br><span class="line">duration=<span class="number">2</span>;                                <span class="comment">%时间长度</span></span><br><span class="line">nBits = <span class="number">16</span> ; </span><br><span class="line">nChannels = <span class="number">2</span> ; </span><br><span class="line">ID = <span class="number">-1</span>; <span class="comment">% default audio input device </span></span><br><span class="line">recObj = audiorecorder(Fs,nBits,nChannels,ID);</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;Start speaking.&#x27;</span>)</span><br><span class="line">recordblocking(recObj,<span class="number">0.1</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;End of Recording.&#x27;</span>);</span><br><span class="line">play(recObj,Fs);</span><br><span class="line"><span class="comment">% % 获取录音数据</span></span><br><span class="line">Recording = getaudiodata(recObj);</span><br><span class="line"><span class="comment">% 绘制录音数据波形</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">plot</span>(Recording);</span><br><span class="line">filename = <span class="string">&#x27;./data1.wav&#x27;</span>; </span><br><span class="line">audiowrite(filename,Recording,<span class="number">8000</span>);</span><br></pre></td></tr></table></figure><p>(2)    信号存储<br>matlab中可以很方便的对音频信号进行分析，而CCS中却对音频信号不敏感，需要将其转化为对应的数据文件格式，matlab中提供了一种很方便的数据写入方式；利用matlab的audioread指令很容易的读取音频文件，并在matlab中将读取到的数据，以十进制数的方式写入到.h文件中；在路径下生成对应的C语言.h头文件；<br>这里给出源代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[y,Fs]=audioread(<span class="string">&#x27;data1.wav&#x27;</span>)</span><br><span class="line">yy=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(y)</span><br><span class="line">yy(<span class="built_in">i</span>)=y(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fid=fopen(<span class="string">&#x27;vsingal.h&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);<span class="comment">%将文件头写入文件，将生成的y信号写入到文件，格式四位小数</span></span><br><span class="line">fprintf(fid,<span class="string">&#x27;%d , \r\n&#x27;</span>,yy);</span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><p>(3)    信号的插值和抽取<br> 抽取，可以在传输的过程中减少传输的数据量，接收端进行恢复时进行插值，将信号恢复成原始抽样率的信号。在数字信号处理中只需要改变数字采样率，一般是先进行插值再进行抽取，以免造成频率混叠，同时在抽取的前先进行预滤波，在插值后进行以个去镜像滤波。</p><p>进行抽取时，原始信号的频谱被周期拓展，如果原始信号最高频率大于抽取之后采样率的一半就会发生混叠（如果是复信号，则信号最高频率大于抽取之后采样率就会发生混叠）。若抽取率为D的话，则输出的信号频率将变为原来频率的D倍，将x(n)的抽样频率减小D倍每D个抽样中取一个，D为整数，称为抽样因子。</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image001.png" alt="image001.png"></p><p>插值也会让频谱周期拓展，但由于输出信号点数增多，所以频率分量只是周期存在，不会发生混叠。如果希望将x(n)的抽样频率增加I倍，即变成I x(n) ，那么，最简单的方法就是将x(n)每两个点之间补I-1个零，I称为插值因子，插值后的信号变为原来信号频率的1/I。</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image002.png" alt="image002.png"></p>              </div>            </details><h2 id="【实验内容及步骤】"><a href="#【实验内容及步骤】" class="headerlink" title="【实验内容及步骤】"></a>【实验内容及步骤】</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>(1)    在matlab中采集一段音频信号；<br>(2)    打开matlab，新建脚本，自定义名字。在脚本中使用matlab的audiorecorder功能，采集一段语音信号并保存成.wav格式的文件：<br>源代码见上文实验原理部分；<br>生成的data1.wav音频文件，如下图：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image004.jpg" alt="image004.jpg"></p><p>(3)    由于matlab可以很便捷的处理音频文件，而ccs却无法做到，只能处理数据格式的信号，因此需要使用matlab将音频文件转化为ccs软件可以识别的数据文件，这里选择使用.h的C语言头文件，便于C语言编程时直接读取响应数据；将音频文件生成数据文件的代码如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[y,Fs]=audioread(<span class="string">&#x27;data1.wav&#x27;</span>)</span><br><span class="line">yy=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(y)</span><br><span class="line">yy(<span class="built_in">i</span>)=y(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fid=fopen(<span class="string">&#x27;vsingal.h&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);<span class="comment">%将文件头写入文件，将生成的y信号写入到文件，格式四位小数</span></span><br><span class="line">fprintf(fid,<span class="string">&#x27;%d , \r\n&#x27;</span>,yy);</span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><p>(4)    此时在matlab项目的目录中多出一个vsingal.h的头文件，如下图：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image006.jpg" alt="image006.jpg" style="zoom:50%;" /></p><p>但是注意到，纯数据格式也不方便我们在C语言中调用，因此需要对其进行简单的修改，将其转化为数组的格式，，如下图所示，在开头增加定义，尾部加上括号，一定记得加;分号！！</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image008.jpg" alt="image008.jpg" style="zoom:50%;" /></p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image010.jpg" alt="image010.jpg" style="zoom:50%;" /></p><p>(5)    打开CCS软件，选择好元器件后，新建工程项目，取名为voice；<br>(6)    新建voice.c文件，作为项目的主体部分；源代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;vsingal.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> length 2500</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> output1[<span class="number">3</span>*length];</span><br><span class="line"><span class="type">float</span> output2[length/<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">&#123;</span><br><span class="line">output1[i*<span class="number">3</span>]=B[i];</span><br><span class="line">output1[i*<span class="number">3</span>+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">output1[i*<span class="number">3</span>+<span class="number">2</span>]=<span class="number">0</span>;<span class="comment">//实现插值操作</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">output2[i/<span class="number">3</span>]=B[i];<span class="comment">//实现抽取操作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(7)    保存文件，并将其添加到项目文件中；同时，将vsingal.h文件添加到项目中；具体步骤如下：<br>右键项目，选择Add Files to Project</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image012.png" alt="image012.png" style="zoom:50%;" /></p><p>(7)    保存文件，并将其添加到项目文件中；同时，将vsingal.h文件添加到项目中；具体步骤如下：<br>右键项目，选择Add Files to Project</p><p>在弹出的对话框中选择</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image014.jpg" alt="image014.jpg" style="zoom:50%;" /></p><p>确定<br>(8)    project→compile all，编译，如下图所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image016.jpg" alt="image016.jpg" style="zoom:50%;" /></p><p>(9)    点击project→build，构建项目文件；提示构建成功：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image018.jpg" alt="image018.jpg" style="zoom:50%;" /></p><p>(10)    装载项目，File→Load Program；在弹出的对话框中选择debug，voice.out文件，将其装载到仿真中；如下图：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image020.png" alt="image020.png" style="zoom:50%;" /><img src="https://img.wang.232232.xyz/img/2022/05/06/image022.jpg" alt="image022.jpg" style="zoom:50%;" /></p><p>(11)    添加观察窗口，view→Graph</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image024.png" alt="image024.png" style="zoom:50%;" /></p><p>在右侧选择Time/frequency，打开设置窗口，设置相应的参数：<br>(12)    观察窗口的参数设置如下：</p><p>   <img src="https://img.wang.232232.xyz/img/2022/05/06/image026.jpg" alt="image026.jpg"><img src="https://img.wang.232232.xyz/img/2022/05/06/image028.jpg" alt="image028.jpg"></p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image030.jpg" alt="image030.jpg"><img src="https://img.wang.232232.xyz/img/2022/05/06/image032.jpg" alt="image032.jpg"></p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image034.jpg" alt="image034.jpg"><img src="https://img.wang.232232.xyz/img/2022/05/06/image036.jpg" alt="image036.jpg"></p><p>其他参数默认即可。<br>(13)    debug→run；运行一段时间后，halt中止程序；程序运行结果如下图所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/06/image038.jpg" alt="image038.jpg" style="zoom:50%;" /></p><p>实验结果解读：插值，相当于在两个数据之间插入一定的值，我们这里选择的是在相邻的两个数据之间添加两个0；单从时域信息来看，插值操作就是在相邻两个值之间多出2个0；这点在单频率的正弦波中体现最为明显；就插值操作来说，会使得原来信号的频谱发生周期延拓，信号频率发生改变，也就是对应语音信号的音调发生变化；<br>抽取，简单说就是将原来的抽样速率降低再进行抽取，或者是对原来抽样数据进行简单的截取同样可以达到目的；实验中采用每3个数据保留1个的抽取方式；抽取同样会造成信号频谱的周期延拓，当等效的新的抽样速率低于截取的语音信号片段的最高频率的2倍时，信号频谱会发生频谱的混叠；因此是实际中一定要注意采样信号的频率高于信号最高频率。</p>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;山东大学DSP原理与应用实验4-综合实验&quot;&gt;&lt;a href=&quot;#山东大学DSP原理与应用实验4-综合实验&quot; class=&quot;headerlink&quot; title=&quot;山东大学DSP原理与应用实验4-综合实验&quot;&gt;&lt;/a&gt;山东大学DSP原理与应用实验4-综合实验&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="实验报告" scheme="http://example.com/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="DSP原理与应用" scheme="http://example.com/tags/DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>百度网盘不限速下载</title>
    <link href="http://example.com/2022/05/05/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8D%E9%99%90%E9%80%9F%E4%B8%8B%E8%BD%BD/"/>
    <id>http://example.com/2022/05/05/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8D%E9%99%90%E9%80%9F%E4%B8%8B%E8%BD%BD/</id>
    <published>2022-05-05T08:07:29.000Z</published>
    <updated>2022-05-05T08:30:30.877Z</updated>
    
    <content type="html"><![CDATA[<h1 id="百度网盘不限速下载"><a href="#百度网盘不限速下载" class="headerlink" title="百度网盘不限速下载"></a>百度网盘不限速下载</h1><p>本文将基于IDM下载器，edge浏览器附加油猴脚本实现百度网盘不限速下载</p><h2 id="一、安装IDM下载器"><a href="#一、安装IDM下载器" class="headerlink" title="一、安装IDM下载器"></a>一、安装IDM下载器</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>目前的IDM下载器已经不在免费，需要购买序列号进行激活；网上的破解方法数不胜数，这里给大家安利一个免操作的方式；</p><p>点击 <a href="https://www.aliyundrive.com/s/SqN4rpFRvHE">链接</a> 获取文件，提取码g8z9，阿里云盘（不限速很好用）需要的可以去下载一个；</p><p>解压文件后，点击！绿化.bat自动运行安装程序，等待安装完成即可使用。</p>              </div>            </details><h2 id="二、打开IDM下载器，配置相关参数"><a href="#二、打开IDM下载器，配置相关参数" class="headerlink" title="二、打开IDM下载器，配置相关参数"></a>二、打开IDM下载器，配置相关参数</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>安装完成后在桌面会出现IDM的图标，点击打开；</p><p>点击下载→选项→连接→默认最大连接数改为32；</p><p>下载→选项中的浏览器要包含edge浏览器。</p>              </div>            </details><h2 id="三、安装油猴脚本"><a href="#三、安装油猴脚本" class="headerlink" title="三、安装油猴脚本"></a>三、安装油猴脚本</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>打开edge浏览器</p><p>点击右上角…找到扩展点击管理扩展，弹出界面中点击左侧获取Microsoft Edge扩展，搜索tempermonkey，安装油猴脚本；（油猴脚本强大到你叹为观止）</p><p>安装完成后打开油猴脚本，获取用户脚本中搜索<a href="https://greasyfork.org/zh-CN/scripts/438972-%E5%AE%8C%E7%BE%8E%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E5%8A%A9%E6%89%8B">完美百度网盘直链助手</a></p><p>安装完成后在油猴中开启此脚本；</p>              </div>            </details><h2 id="四、开始下载"><a href="#四、开始下载" class="headerlink" title="四、开始下载"></a>四、开始下载</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>打开edge浏览器，进入百度网盘界面会发现多了一个下载助手按钮，点击下载即可。</p>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;百度网盘不限速下载&quot;&gt;&lt;a href=&quot;#百度网盘不限速下载&quot; class=&quot;headerlink&quot; title=&quot;百度网盘不限速下载&quot;&gt;&lt;/a&gt;百度网盘不限速下载&lt;/h1&gt;&lt;p&gt;本文将基于IDM下载器，edge浏览器附加油猴脚本实现百度网盘不限速下载&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="百度网盘破解" scheme="http://example.com/categories/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%A0%B4%E8%A7%A3/"/>
    
    
    <category term="百度网盘" scheme="http://example.com/tags/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>拉格朗日乘数法</title>
    <link href="http://example.com/2022/05/03/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E4%B9%98%E6%95%B0%E6%B3%95/"/>
    <id>http://example.com/2022/05/03/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E4%B9%98%E6%95%B0%E6%B3%95/</id>
    <published>2022-05-03T07:47:01.000Z</published>
    <updated>2022-05-05T08:30:51.085Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Math-amp-Algorithm-拉格朗日乘数法"><a href="#Math-amp-Algorithm-拉格朗日乘数法" class="headerlink" title="Math &amp; Algorithm\ 拉格朗日乘数法"></a><a href="https://www.cnblogs.com/maybe2030/p/4946256.html">Math &amp; Algorithm\ 拉格朗日乘数法</a></h1><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p><strong>阅读目录</strong></p><ul><li><ol><li>拉格朗日乘数法的基本思想</li></ol></li><li><ol><li>数学实例</li></ol></li><li><ol><li>拉格朗日乘数法的基本形态</li></ol></li><li><ol><li>拉格朗日乘数法与KKT条件</li></ol></li></ul><p>　　拉格朗日乘数法（Lagrange Multiplier Method）之前听数学老师授课的时候就是一知半解，现在越发感觉拉格朗日乘数法应用的广泛性，所以特意抽时间学习了麻省理工学院的在线数学课程。新学到的知识一定要立刻记录下来，希望对各位博友有些许帮助。</p><p>回到顶部</p>              </div>            </details><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <h3 id="1-拉格朗日乘数法的基本思想"><a href="#1-拉格朗日乘数法的基本思想" class="headerlink" title="1. 拉格朗日乘数法的基本思想"></a>1. 拉格朗日乘数法的基本思想</h3><p>　　<strong>作为一种优化算法，拉格朗日乘子法主要用于解决约束优化问题，它的基本思想就是通过引入拉格朗日乘子来将含有n个变量和k个约束条件的约束优化问题转化为含有（n+k）个变量的无约束优化问题。拉格朗日乘子背后的数学意义是其为约束方程梯度线性组合中每个向量的系数。</strong></p><p>　　<strong>如何将一个\</strong>含有n个变量和k个约束条件的约束优化问题转化为含有（n+k）个变量的无约束优化问题？拉格朗日乘数法从数学意义入手，通过引入拉格朗日乘子建立极值条件，对n个变量分别求偏导对应了n个方程，然后加上k个约束条件（对应k个拉格朗日乘子）一起构成包含了（n+k）变量的（n+k）个方程的方程组问题，这样就能根据求方程组的方法对其进行求解。*<em>*</em></p><p>　　解决的问题模型为约束优化问题：</p><p>　　<strong>min/max a function f(x,y,z), where x,y,z are not independent and g(x,y,z)=0.</strong></p><p>　　<strong>即：min/max f(x,y,z)</strong></p><p>　　　　<strong>s.t. g(x,y,z)=0</strong></p>              </div>            </details><details class="folding-tag" yellow><summary> 点击展开 </summary>              <div class='content'>              <h3 id="2-数学实例"><a href="#2-数学实例" class="headerlink" title="2. 数学实例"></a>2. 数学实例</h3><p>　　首先，我们先以麻省理工学院数学课程的一个实例来作为介绍拉格朗日乘数法的引子。</p><p>　　【麻省理工学院数学课程实例】求双曲线xy=3上离远点最近的点。</p><p>　　解：</p><p>　　首先，我们根据问题的描述来提炼出问题对应的数学模型，即：</p><p>　　min f(x,y)=x2+y2（两点之间的欧氏距离应该还要进行开方，但是这并不影响最终的结果，所以进行了简化，去掉了平方）</p><p>　　s.t. xy=3.</p><p>　　根据上式我们可以知道这是一个典型的约束优化问题，其实我们在解这个问题时最简单的解法就是通过约束条件将其中的一个变量用另外一个变量进行替换，然后代入优化的函数就可以求出极值。我们在这里为了引出拉格朗日乘数法，所以我们采用拉格朗日乘数法的思想进行求解。</p><p>　　我们将x2+y2=c的曲线族画出来，如下图所示，当曲线族中的圆与xy=3曲线进行相切时，切点到原点的距离最短。也就是说，当f(x,y)=c的等高线和双曲线g(x,y)相切时，我们可以得到上述优化问题的一个极值（注意：如果不进一步计算，在这里我们并不知道是极大值还是极小值）。</p><p><img src="https://images2015.cnblogs.com/blog/764050/201511/764050-20151108012943227-159939557.png" alt="img"></p><p>　　现在原问题可以转化为求当f(x,y)和g(x,y)相切时，x,y的值是多少？</p><p>　　如果两个曲线相切，那么它们的切线相同，即法向量是相互平行的，▽f//▽g.</p><p>　　由▽f//▽g可以得到，▽f=λ*▽g。</p><p>　　这时，我们将原有的约束优化问题转化为了一种对偶的无约束的优化问题，如下所示：</p><p>　　<strong>原问题：</strong>min f(x,y)=x2+y2        <strong>对偶问题：</strong>由▽f=λ*▽g得，</p><p>　　　　　　s.t. xy=3                    fx=λ*gx，</p><p>　　                                  fy=λ*gy，</p><p>​                                     xy=3.</p><p>​         约束优化问题                  无约束方程组问题</p><p>　　通过求解右边的方程组我们可以获取原问题的解，即</p><p>　　2x=λ*y</p><p>　　2y=λ*x</p><p>　　xy=3</p><p>　　通过求解上式可得，λ=2或者是-2；当λ=2时，(x,y)=(sqrt(3), sqrt(3))或者(-sqrt(3), -sqrt(3))，而当λ=-2时，无解。所以原问题的解为(x,y)=(sqrt(3), sqrt(3))或者(-sqrt(3), -sqrt(3))。</p><p>　　通过举上述这个简单的例子就是为了体会拉格朗日乘数法的思想，即通过引入拉格朗日乘子(λ)将原来的约束优化问题转化为无约束的方程组问题。</p>              </div>            </details><details class="folding-tag" orange><summary> 点击展开 </summary>              <div class='content'>              <h3 id="3-拉格朗日乘数法的基本形态"><a href="#3-拉格朗日乘数法的基本形态" class="headerlink" title="3. 拉格朗日乘数法的基本形态"></a>3. 拉格朗日乘数法的基本形态</h3><p> 　<strong>求函数<img src="https://images0.cnblogs.com/blog/571227/201411/231646368754061.png" alt="img">在满足<img src="https://images0.cnblogs.com/blog/571227/201411/231647207181299.png" alt="img">下的条件极值，可以转化为函数<img src="https://images0.cnblogs.com/blog/571227/201411/231650139846199.png" alt="img">的无条件极值问题。</strong></p><p>　　我们可以画图来辅助思考。</p><p><img src="https://pic002.cnblogs.com/images/2012/103496/2012101621500549.png" alt="img"></p><p>　　绿线标出的是约束g(x,y)=c的点的轨迹。蓝线是f(x,y)的等高线。箭头表示斜率，和等高线的法线平行。</p><p>　　从图上可以直观地看到在最优解处，f和g的斜率平行。</p><p>　　▽[f(x,y)+λ(g(x,y)−1)]=0, λ≠0</p><p>　　一旦求出λ的值，将其套入下式，易求在无约束极值和极值所对应的点。</p><p>　　F(x,y)=f(x,y)+λ(g(x,y)−c)</p><p>　　新方程F(x,y)在达到极值时与f(x,y)相等，因为F(x,y)达到极值时g(x,y)−c总等于零。</p><p>　　上述式子取得极小值时其导数为0，即▽f(x)+▽∑λigi(x)=0，也就是说f(x)和g(x)的梯度共线。</p><p>　　<strong>题目1：</strong></p><p>　　给定椭球</p><p>   <img src="https://images0.cnblogs.com/blog/571227/201411/231635338436753.png" alt="img"></p><p>　　求这个椭球的内接长方体的最大体积。这个问题实际上就是条件极值问题，即在条件  </p><p>  <img src="https://images0.cnblogs.com/blog/571227/201411/231637406257888.png" alt="img"></p><p>　　下，求<img src="https://images0.cnblogs.com/blog/571227/201411/231639439217452.png" alt="img">的最大值。</p><p>　　当然这个问题实际可以先根据条件消去<img src="https://images0.cnblogs.com/blog/571227/201411/231641307182559.png" alt="img">，然后带入转化为无条件极值问题来处理。但是有时候这样做很困难，甚至是做不到的，这时候就需要用<strong>拉格朗日乘数法</strong>了。通过拉格朗日乘数法将问题转化为</p><p>   <img src="https://images0.cnblogs.com/blog/571227/201411/231658574531311.png" alt="img"></p><p>　　对<img src="https://images0.cnblogs.com/blog/571227/201411/231659273433944.png" alt="img">求偏导得到</p><p>   <img src="https://images0.cnblogs.com/blog/571227/201411/231705053906736.png" alt="img"></p><p>　　联立前面三个方程得到<img src="https://images0.cnblogs.com/blog/571227/201411/231712092968762.png" alt="img">和<img src="https://images0.cnblogs.com/blog/571227/201411/231712459683193.png" alt="img">，带入第四个方程解之</p><p>   <img src="https://images0.cnblogs.com/blog/571227/201411/231716003591207.png" alt="img"></p><p>　　带入解得最大体积为</p><p>   <img src="https://images0.cnblogs.com/blog/571227/201411/231718509061837.png" alt="img"></p><p>　　拉格朗日乘数法对一般多元函数在多个附加条件下的条件极值问题也适用。</p><p>　　<strong>题目2：</strong></p><p>　　<strong>题目：</strong>求离散分布的最大熵。</p><p>　　<strong>分析：</strong>因为离散分布的熵表示如下</p><p>   <img src="https://img-blog.csdn.net/20141123193956360" alt="img"></p><p>   而约束条件为</p><p>   <img src="https://img-blog.csdn.net/20141123194235012" alt="img"></p><p>   要求函数<img src="https://img-blog.csdn.net/20141123194415343" alt="img">的最大值，根据<strong>拉格朗日乘数法</strong>，设</p><p>   <img src="https://img-blog.csdn.net/20141123194831328" alt="img"></p><p>   对所有的<img src="https://img-blog.csdn.net/20141123195054453" alt="img">求偏导数，得到</p><p>   <img src="https://img-blog.csdn.net/20141123195531671" alt="img"></p><p>   计算出这<img src="https://img-blog.csdn.net/20141123195846859" alt="img">个等式的微分，得到</p><p>   <img src="https://img-blog.csdn.net/20141123200320312" alt="img"></p><p>   这说明所有的<img src="https://img-blog.csdn.net/20141123200353076" alt="img">都相等，最终解得</p><p>   <img src="https://img-blog.csdn.net/20141123200452421" alt="img"></p><p>   因此，使用<strong>均匀分布</strong>可得到最大熵的值。</p>              </div>            </details><details class="folding-tag" blue><summary> 点击展开 </summary>              <div class='content'>              <h3 id="4-拉格朗日乘数法与KKT条件"><a href="#4-拉格朗日乘数法与KKT条件" class="headerlink" title="4. 拉格朗日乘数法与KKT条件"></a>4. 拉格朗日乘数法与KKT条件</h3><p>　　我们上述讨论的问题均为等式约束优化问题，但等式约束并不足以描述人们面临的问题，不等式约束比等式约束更为常见，大部分实际问题的约束都是不超过多少时间，不超过多少人力，不超过多少成本等等。所以有几个科学家拓展了拉格朗日乘数法，增加了KKT条件之后便可以用拉格朗日乘数法来求解不等式约束的优化问题了。</p><p>　　首先，我们先介绍一下什么是KKT条件。</p><p>　　<strong>KKT条件是指在满足一些有规则的条件下, 一个非线性规划(Nonlinear Programming)问题能有最优化解法的一个必要和充分条件.</strong> 这是一个广义化拉格朗日乘数的成果. 一般地, 一个最优化数学模型的列标准形式参考开头的式子, 所谓 Karush-Kuhn-Tucker 最优化条件，就是指上式的最优点x∗必须满足下面的条件:</p><p>　　1). 约束条件满足gi(x∗)≤0,i=1,2,…,p, 以及,hj(x∗)=0,j=1,2,…,q</p><p>　　2). ∇f(x∗)+∑i=1μi∇gi(x∗)+∑j=1λj∇hj(x∗)=0, 其中∇为梯度算子;</p><p>　　3). λj≠0且不等式约束条件满足μi≥0,μigi(x∗)=0,i=1,2,…,p。</p><p>　　KKT条件第一项是说最优点x∗必须满足所有等式及不等式限制条件, 也就是说最优点必须是一个可行解, 这一点自然是毋庸置疑的. 第二项表明在最优点x∗, ∇f必须是∇gi和∇hj的线性組合, μi和λj都叫作拉格朗日乘子. 所不同的是不等式限制条件有方向性, 所以每一个μi都必须大于或等于零, 而等式限制条件没有方向性，所以λj没有符号的限制, 其符号要视等式限制条件的写法而定.</p><p>　　<strong>为了更容易理解，我们先举一个例子来说明一下KKT条件的由来。</strong></p><p>　　let L(x,μ)=f(x)+∑k=1μkgk(x)，其中μk≥0,gk(x)≤0</p><p>　　∵μk≥0 gk(x)≤0  =&gt;  μg(x)≤0</p><p>　　∴maxμL(x,μ)=f(x)          (2)</p><p>　　∴minxf(x)=minxmaxμL(x,μ)   (3)</p><p>　　maxμminxL(x,μ)=maxμ[minxf(x)+minxμg(x)]=maxμminxf(x)+maxμminxμg(x)=minxf(x)+maxμminxμg(x)</p><p>　　又∵μk≥0, gk(x)≤0</p><p>　　<img src="https://images2015.cnblogs.com/blog/764050/201511/764050-20151108124924508-1059472335.png" alt="img"></p><p>　　∴maxμminxμg(x)=0, 此时μ=0 or g(x)=0.</p><p>　　∴maxμminxL(x,μ)=minxf(x)+maxμminxμg(x)=minxf(x)    (4)</p><p>　　此时μ=0 or g(x)=0.</p><p>　　联合(3),(4)我们得到minxmaxμL(x,μ)=maxμminxL(x,μ), 亦即</p><p> 　<img src="https://images2015.cnblogs.com/blog/764050/201511/764050-20151108125247617-101937211.png" alt="img"></p><p>　　minxmaxμL(x,μ)=maxμminxL(x,μ)=minxf(x)</p><p>　　我们把maxμminxL(x,μ)称为原问题minxmaxμL(x,μ)的对偶问题，上式表明当满足一定条件时原问题、对偶的解、以及minxf(x)是相同的，且在最优解x∗处μ=0 or g(x∗)=0。把x∗代入(2)得maxμL(x∗,μ)=f(x∗)，由(4)得maxμminxL(x,μ)=f(x∗)，所以L(x∗,μ)=minxL(x,μ)，这说明x∗也是L(x,μ)的极值点，即</p><p>　　<img src="https://images2015.cnblogs.com/blog/764050/201511/764050-20151108125533899-1927963648.png" alt="img"></p><p>　　最后总结一下：</p><p>　　<img src="https://images2015.cnblogs.com/blog/764050/201511/764050-20151108125628352-1143368471.png" alt="img"></p><p>　　KKT条件是拉格朗日乘子法的泛化，如果我们把等式约束和不等式约束一并纳入进来则表现为：</p><p>　　<img src="https://images2015.cnblogs.com/blog/764050/201511/764050-20151108125718524-551647088.png" alt="img"></p><p>　　注：x,λ,μ都是向量。</p><p>　　<img src="https://images2015.cnblogs.com/blog/764050/201511/764050-20151108125844430-1838900179.png" alt="img"></p><p>　　表明f(x)在极值点x∗处的梯度是各个hi(x∗)和gk(x∗)梯度的线性组合。</p>              </div>            </details><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>原文地址：<a href="https://www.cnblogs.com/maybe2030/p/4946256.html">https://www.cnblogs.com/maybe2030/p/4946256.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Math-amp-Algorithm-拉格朗日乘数法&quot;&gt;&lt;a href=&quot;#Math-amp-Algorithm-拉格朗日乘数法&quot; class=&quot;headerlink&quot; title=&quot;Math &amp;amp; Algorithm\ 拉格朗日乘数法&quot;&gt;&lt;/a&gt;&lt;a hr</summary>
      
    
    
    
    <category term="数学" scheme="http://example.com/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="Math" scheme="http://example.com/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>山东大学DSP原理与应用实验2-C语言实验</title>
    <link href="http://example.com/2022/04/29/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E9%AA%8C2-C%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/"/>
    <id>http://example.com/2022/04/29/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E9%AA%8C2-C%E8%AF%AD%E8%A8%80%E5%AE%9E%E9%AA%8C/</id>
    <published>2022-04-29T14:23:09.000Z</published>
    <updated>2022-05-02T11:16:09.888Z</updated>
    
    <content type="html"><![CDATA[<div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-orange"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>look here</p></div></div><h1 id="一、实验要求"><a href="#一、实验要求" class="headerlink" title="一、实验要求"></a>一、实验要求</h1><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <ol><li><p>利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。</p></li><li><p>利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。</p></li><li><p>编写C程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。</p></li><li><p>利用编译器的op选项，对实验二的C语言程序按照级别进行优化，给出耗时的变化的分析。</p></li><li><p>应用CCS的内联函数实现低通、高通滤波，与步骤1中的耗时进行比较。</p></li></ol>              </div>            </details><h1 id="二、实验内容及步骤"><a href="#二、实验内容及步骤" class="headerlink" title="二、实验内容及步骤"></a>二、实验内容及步骤</h1><h3 id="1-利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。"><a href="#1-利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。" class="headerlink" title="1.利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。"></a>1.利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。</h3><details class="folding-tag" yellow><summary> 点击展开 </summary>              <div class='content'>              <p>(1)    打开Matlab软件，在命令行窗口输入filterDesigner指令，打开滤波器设计工具窗口；</p><p><img src="https://tucang.cc/api/image/show/ebc64adb3b89c77e9561412422ca7264" alt="1.png" style="zoom:50%;" /></p><p>(2)    设置滤波器的相关参数，这里选择FIR数字低通滤波器，采用hamming窗，10阶，截止频率为600Hz，抽样频率为4096Hz，如下所示：</p><p><img src="https://tucang.cc/api/image/show/42858cff2ea314cde779539240897665" alt="2.png" style="zoom:50%;" /></p><p>(3)    选择查看滤波器代码，并在输出结果的位置去掉分号，以便在控制台打印输出内容，执行选中部分：</p><p><img src="https://tucang.cc/api/image/show/381ab6000e87dd16e99679fbf5f2a32c" alt="3.png" style="zoom:50%;" /></p><p>(4)    得到输出内容如下：</p><p><img src="https://pic7.58cdn.com.cn/nowater/webim/big/n_v26fe9403d62ab410a9dad474ec8a9483f.png" style="zoom:50%;" /><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v2c65f45cee4874e7fa9ae03ad8cff463a.png" alt=""></p><p>(5)    另外一种方式是采用C语言的头文件引进的方式，当然也是主流和老师推荐的方式，尤其对大量的数据比较友好。如果采用直接将滤波器系数放进代码的形式，将会使代码显得臃肿，下面介绍如何用matlab导出.h头文件并在CCS中的使用；<br>(6)    将生成的滤波器系数导出，生成.h文件，也就是c的头文件；</p><p><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v2c65f45cee4874e7fa9ae03ad8cff463a.png" style="zoom:50%;" /></p><p>(7)    将其命名为LowPassFilter保存；</p><p><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v293bf80de3c46435cbdfce9ea61713244.png" style="zoom:50%;" /><img src="https://pic6.58cdn.com.cn/nowater/webim/big/n_v20b84e254e725488c8199bca81ea0401b.png" alt=""></p><p>(8)    选择FIR数字高通滤波器，相关参数如下所示：</p><p><img src="https://pic6.58cdn.com.cn/nowater/webim/big/n_v20b84e254e725488c8199bca81ea0401b.png" style="zoom:50%;" /></p><p>(9)    按照同样的方法保存HighPassFilter.h文件</p><p><img src="https://pic3.58cdn.com.cn/nowater/webim/big/n_v268156fea5fc2460bb90f21ee6fb20516.png" style="zoom:50%;" /></p>              </div>            </details><h3 id="2-利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。"><a href="#2-利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。" class="headerlink" title="2.利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。"></a>2.利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。</h3><details class="folding-tag" red><summary> 点击展开 </summary>              <div class='content'>              <p>CCS软件可以很方便的使用C语言或者汇编语言实现DSP信号的处理操作，但是产生复杂的输入信号数据就会比较麻烦，但是MATLAB却可以很轻松简单的完成这些操作。<br>我们使用的时候需要将MATLAB生成的数据文件导入到CCS中，.dat文件是CCS能够识别的文件格式。<br>(1)    输入信号产生的MATLAB源代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">f1=<span class="number">100</span>;</span><br><span class="line">f2=<span class="number">1500</span>;</span><br><span class="line">fs=<span class="number">4096</span>;</span><br><span class="line">N=<span class="number">1024</span>;</span><br><span class="line">T=<span class="number">1</span>/fs;</span><br><span class="line">n=<span class="number">0</span>:N;</span><br><span class="line">y1=<span class="number">1024</span>*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*f1*n*T);</span><br><span class="line">y2=<span class="number">1024</span>*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*f2*n*T);</span><br><span class="line">y=y1+y2;</span><br><span class="line">xto_ccs=<span class="built_in">round</span>(y);</span><br><span class="line">fid=fopen(<span class="string">&#x27;insignal.h&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);<span class="comment">%将文件头写入文件，将生成的y信号写入到文件，格式四位小数</span></span><br><span class="line">fprintf(fid,<span class="string">&#x27; %d ,&#x27;</span>,xto_ccs);</span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><p>(2)    MATLAB中运行结果：<br>这里是两组信号叠加产生的的输入信号波形<br>程序运行的结果，在bin目录的DSP1目录下产生一个insignal.h的文件，如下图所示：</p><p>打开文件，并进行简单的编辑，使得可以在CCS中直接引用；</p><p><img src="https://pic7.58cdn.com.cn/nowater/webim/big/n_v26601ce8394e34403b00e33aa3d1e5c20.png" style="zoom:50%;" /></p><p>下面对其进行改造，成数组格式，具体格式参照matlab生成的滤波器的.h文件；下面是部分截图：</p><p><img src="https://pic4.58cdn.com.cn/nowater/webim/big/n_v2bb68a2700777494aae36f78d971d901f.png" style="zoom:50%;" /></p><p>一定要记得在数组的}后面加上分号；实际做的时候这里忘记加分号导致一直报错！！！</p>              </div>            </details><h3 id="3-编写C程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。"><a href="#3-编写C程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。" class="headerlink" title="3.编写C程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。"></a>3.编写C程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。</h3><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <p>(1)    建立新的工程文件，并将第一步生成的.h头文件添加到文件目录下：</p><p><img src="https://pic3.58cdn.com.cn/nowater/webim/big/n_v2c19be7b246d44d989867f337739a2af8.png" style="zoom:50%;" /></p><p>(2)    新建工程，命名为filter，将.h头文件添加到项目工程</p><p><img src="https://pic6.58cdn.com.cn/nowater/webim/big/n_v29714720a06b348b9b599867542e260fc.png" style="zoom:50%;" /></p><p>(3)    新建.c源文件，完成滤波实验，源代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LowPassFilter.h&quot;</span></span></span><br><span class="line"><span class="comment">//#include &quot;HighPassFilter.h&quot;//由于matlab生成的.h头文件中都是数组B</span></span><br><span class="line"><span class="comment">//因此每次使用的时候注释掉不用的那个就可了</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;insignal.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> L 1025</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi 3.1415926</span></span><br><span class="line"><span class="type">long</span> yn;<span class="comment">//保存滤波后的结果，32位长整型</span></span><br><span class="line"><span class="type">long</span> input[L];<span class="comment">//输入数组，作为视图的输入地址观察输入</span></span><br><span class="line"><span class="type">long</span> output[L]; <span class="comment">//输出数组，作为视图的输入地址观察输出</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">int</span> m,n; </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;L;i++)</span><br><span class="line">input[i]=xn[i];<span class="comment">//待滤波信号，乘以1024转换为Q10格式（sin范围为-1~1，将其转换为整数格式）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;L+BL;n++)<span class="comment">//卷积计算</span></span><br><span class="line">&#123;</span><br><span class="line">yn=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;(m&lt;BL)&amp;&amp;(m&lt;n);m++)</span><br><span class="line">yn+=B[m]*input[n-m];</span><br><span class="line">output[n]=yn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);<span class="comment">//循环等待</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(4)    保存为filter.c文件<br>(5)    编译程序，提示下面的错误：</p><p><img src="https://pic4.58cdn.com.cn/nowater/webim/big/n_v21975126228394f59ac890b262b2859b3.png" style="zoom: 50%;" /></p><p>缺少头文件tmwtypes.h，经查找，该文件在matlab的安装路径下，将其拷贝到工程目录并添加进去：（其实在matlab滤波器生成的.h头文件中就有先关的说明，只是当时没注意）<br>(6)    完整的工程项目：</p><p><img src="https://pic7.58cdn.com.cn/nowater/webim/big/n_v23b5fe702f1144b9a8d3ba4fddb436a43.png" style="zoom:50%;" /></p><p>(7)    再次编译，提示没有错误：</p><p><img src="https://pic6.58cdn.com.cn/nowater/webim/big/n_v2e1ba4a36582a4e9c904d8bfc79d394df.png" style="zoom:50%;" /></p><p>(8)    构建项目（Program→build），生成.out文件：</p><p><img src="https://pic8.58cdn.com.cn/nowater/webim/big/n_v2faed2a96f7104e079a95c9418eb301ed.png" style="zoom:50%;" /></p><p>(9)    装载项目，在项目的Debug目录下找到filter.out，并进行loadprogram：</p><p><img src="https://pic8.58cdn.com.cn/nowater/webim/big/n_v2bd766b957655450b977491c2deab44c6.png" style="zoom:50%;" /></p><p>(10)    利用CCS软件自带的graph工具测试输入输出波形，并且可以对信号进行频谱分析，如下图所示：<br>时域分析：</p><p><img src="https://pic7.58cdn.com.cn/nowater/webim/big/n_v29b54c22d9b33424a87e7bce56433332a.png" style="zoom:50%;" /><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v251fadf9160ec4906885fa45948262357.png" alt=""></p><p>频域分析：</p><p><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v251fadf9160ec4906885fa45948262357.png" alt=""></p><p>将入口地址分别改为input和output将显示输入和输出的波形图。<br>其他参数默认就可以。<br>参数说明：<br>Acquisition Buffer Size：表示通过仿真器从DSP的内存中读取的数据的大小。这里我们设置成1024，也可以设置成比他更小的值，这样就只能看到信号的部分图像。<br>Dsp Data Type：数据类型设置，因为在程序中使用的是long型数据，在这里需要设置成32位整形数据。<br>Index Increment：索引增量，表示每个数据点序号的相差值，这里是逐点显示的，因此默认设置为1，如果想要每隔一个点显示一个那么就应该设置成2。<br>Q_Value：Q值，一般这不常用，默认。<br>Sampling Rate Hz：以Hz为单位的采样率，在这里我们的采样率是4096，因此设置成4096。<br>Start Address：开始地址，表示要显示的数组的首地址，现在想要看的是数组input，这里设置成input。<br>Auto Scale：自动调整显示比例使其适应整个显示窗口，默认即可。<br>Axis Display ：显示坐标轴，默认即可。<br>Data Plot Style：数据绘制类型，有Line和Bar两种，这里选择Line。<br>Display Data Size：显示数据大小，表示要将多少个点的数据进行显示，注意这个值一定要小于等于Acquisition Buffer Size，这里设置成1024。<br>Grid Style：网格类型，有 NoGrid, Minor Grid, Major Grid三种选项，默认即可。<br>Magnitude Display Scale：幅值显示类型，有Linear（线性的）Logarithmic（对数的），默认即可。<br>Time Display Unit：显示时间的单位有sample,s, ms, us几种可选，其中sample表示显示的点的序号，默认即可。<br>Use Dc Value For Graph：是否使用Dc值，一般不常用，默认即可。</p><p>频谱FFT参数说明：部分参数和时域显示时的参数相同，有部分不同如下：<br>Signal Type ：信号类型，有Real，Complex这两种，此处信号数据均为实数据，因此我们选择Real，如果数据类型是Complex，选择Complex。<br>Frequency Display Unit ：频率显示单位，有Hz,KHz,MHz三种，这里选择Hz。<br>FFT Order ：FFT的阶数，由它来决定FFT Frame Size，例如 FFT Order 设置为5 那么FFT Frame Size 就为32 = 2^5。这里我们设置成12，那么FFT Frame Size就是4096。<br>FFT Frame Size ：FFT做变换的点数，FFT Order决定，此处选择4096点FFT。<br>FFT Window Function ：FFT窗函数，选择做FFT变换时采用什么窗函数，有Rectangular（矩形窗），Bartlett，Blackman，Hamming，Hanning，选择什么窗函数根据实际的需求来决定到底采用哪一个窗函数，默认即可。<br>(11)    此时的窗体是没有波形的，这是我们点菜单栏Debug→run即可，或者F5<br>(12)    halt中止后，低通滤波效果如下图所示：</p><p><img src="https://pic6.58cdn.com.cn/nowater/webim/big/n_v2b22462abb62946c0b7b6987ea801a0b3.png" style="zoom:50%;" /></p><p>(13)    高通滤波按照相同的操作进行即可（将代码中的头文件的LowPassFilter.h注释掉，将HighPassFilter.h取消注释即可），下面是高通滤波的效果图：</p><p><img src="https://pic2.58cdn.com.cn/nowater/webim/big/n_v285d22fddad334ca788accb82c77bb261.png" style="zoom:50%;" /></p>              </div>            </details><h3 id="4-利用编译器的op选项，对实验二的C语言程序按照级别进行优化，给出耗时的变化的分析。"><a href="#4-利用编译器的op选项，对实验二的C语言程序按照级别进行优化，给出耗时的变化的分析。" class="headerlink" title="4.利用编译器的op选项，对实验二的C语言程序按照级别进行优化，给出耗时的变化的分析。"></a>4.利用编译器的op选项，对实验二的C语言程序按照级别进行优化，给出耗时的变化的分析。</h3><details class="folding-tag" orange><summary> 点击展开 </summary>              <div class='content'>              <p>(1)    右键.c文件，选择File Specific options：</p><p><img src="https://pic2.58cdn.com.cn/nowater/webim/big/n_v2697dfc0c0d5d49428a4862755480602b.png" style="zoom:50%;" /></p><p>各级优化的内容：</p><p>​    –O0<br>​    简化控制流图<br>​    分配变量到寄存器<br>​    进行循环旋转（loop rotation）<br>​    删除未使用的代码<br>​    简化表达式和语句<br>​    内联声明为inline的函数</p><p>​    –O2<br>​    执行局部复制/常量传递<br>​    删除未使用的赋值语句<br>​    删除局部共有表达式</p><p>​    –O2<br>​    进行软件流水<br>​    进行循环优化<br>​    删除全局共有子表达式<br>​    删除全局未使用的赋值语句<br>​    把循环中的对数组的引用转化为递增的指针形式<br>​    把循环展开</p><p>​    –O3<br>​    删除未使用的所有的函数<br>​    当函数的返回值没用到时，简化函数的返回形式<br>​    内联小的函数<br>​    重新对函数的声明进行排序。这样当优化调用代码时，被调用函数的属性是已知的<br>​    当所有调用都传递一个相同的参数时，把这个参数直接放到函数体中去，不在通过寄存器/存储器的方式传递这个参数。<br>​    识别文件级别变量的特征。<br>(2)    Opt level就是代买优化的等级，如下图所示，分为o0，o1，o2，o3优化级别：</p><p><img src="https://pic3.58cdn.com.cn/nowater/webim/big/n_v25543897f2b6445e78bf0254e5c4c90de.png" style="zoom:50%;" /></p><p>(3)    打开耗时计数时钟，观察不同优化情况下的耗时情况（代码优化程度）：</p><p><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v25b071913737e43c79b3182dd698cc3d0.png" style="zoom:50%;" /></p><p>(4)    打开view后，右下角会出现表的形状，在这里显示代码运行的时间（和振荡周期有关）</p><p><img src="https://pic2.58cdn.com.cn/nowater/webim/big/n_v23db1b0a3af864c37b7ebaa06fb0e839d.png" style="zoom: 50%;" /></p><p>(5)    比较不同优化级别下的耗时情况：<br>选定断点，在 while(1)处，</p><p><img src="https://pic4.58cdn.com.cn/nowater/webim/big/n_v2954d49a8ce4e495b871119e661dda1ef.png" style="zoom:50%;" /></p><p>黄色箭头表示程序已经运行到此处，这里就需要重新运行了；<br>每次运行后需restart程序才能回到开头运行，restart的位置在Debug→restart，然后双击右下角的图标，使得时间清零；然后点击Debug→run，程序运行结束后会在右下角显示一个时间，这个时间就是程序运行到断点处的时间；<br>每次修改完优化级别后，需要unload项目，重新构建（build）然后在load项目，完成上面的步骤即可得到准确的程序运行时间；<br>便于更好的观察程序运行情况，开启了代码汇编混合窗口模式。</p><p><img src="https://pic7.58cdn.com.cn/nowater/webim/big/n_v2eeaa1324db4b472faa94a81cc168d23f.png" style="zoom:50%;" /></p><p><img src="https://pic3.58cdn.com.cn/nowater/webim/big/n_v29b7b0f22444b4e0a95b7be8402a5e0e3.png" style="zoom:50%;" /></p><p>观察不同优化级别下的程序运行时间：</p><p><img src="https://pic3.58cdn.com.cn/nowater/webim/big/n_v2683a32f3f6b943a48b63daeaaf7c8978.png" style="zoom:50%;" /></p><p>但是这种方法获得的时间每次都有细微的差异，使用起来也是仅供参考，更高版本的CCS中提供了更为可靠和简单的观察方式，由于没有安装其他版本的CCS，这里就不在过多介绍。<br>不过从实验的结果来看，o2级别的优化效果是一个分水岭，所有我们一般采用的优化级别都是o2级别；这点仿真结果与实际应用是符合的。</p>              </div>            </details><h3 id="5-应用CCS的内联函数实现低通、高通滤波，与步骤1中的耗时进行比较。"><a href="#5-应用CCS的内联函数实现低通、高通滤波，与步骤1中的耗时进行比较。" class="headerlink" title="5.应用CCS的内联函数实现低通、高通滤波，与步骤1中的耗时进行比较。"></a>5.应用CCS的内联函数实现低通、高通滤波，与步骤1中的耗时进行比较。</h3><details class="folding-tag" blue><summary> 点击展开 </summary>              <div class='content'>              <p>(1)    基本的构建思路和第二部分相同<br>核心点是卷积方式的改变；<br>滤波的实质就是信号与滤波器的卷积输出，可以使用C语言完成卷积功能，当然也可以采用CCS的内联函数convol实现卷积运算。<br>(2)    c文件源代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line">   <span class="comment">//#include &quot;LowPassFilter.h&quot;</span></span><br><span class="line">   <span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HighPassFilter.h&quot;</span><span class="comment">//由于matlab生成的.h头文件中都是数组B</span></span></span><br><span class="line">   <span class="comment">//因此每次使用的时候注释掉不用的那个就可了</span></span><br><span class="line">   <span class="meta">#<span class="keyword">include</span> <span class="string">&quot;insignal.h&quot;</span></span></span><br><span class="line">   <span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dsplib.h&quot;</span>   <span class="comment">//内联函数的引用</span></span></span><br><span class="line">   <span class="meta">#<span class="keyword">define</span> L 1025</span></span><br><span class="line">   <span class="meta">#<span class="keyword">define</span> pi 3.1415926</span></span><br><span class="line">   <span class="meta">#<span class="keyword">define</span> hn 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//保存滤波后的结果，32位长整型</span></span><br><span class="line"></span><br><span class="line"><span class="type">short</span> input[L];<span class="comment">//输入数组，作为视图的输入地址观察输入</span></span><br><span class="line"><span class="type">short</span> output[L]; <span class="comment">//输出数组，作为视图的输入地址观察输出</span></span><br><span class="line"><span class="type">short</span> h[<span class="number">11</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="comment">//int m,n; </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;L;i++)</span><br><span class="line">input[i]=xn[i];<span class="comment">//待滤波信号，乘以1024转换为Q10格式（sin范围为-1~1，将其转换为整数格式）</span></span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;L;i++)</span><br><span class="line">h[i]=B[i];</span><br><span class="line"><span class="comment">/******注释这里，换成内联函数</span></span><br><span class="line"><span class="comment">for(n=0;n&lt;L+BL;n++)//卷积计算</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">yn=0;</span></span><br><span class="line"><span class="comment">for(m=0;(m&lt;BL)&amp;&amp;(m&lt;n);m++)</span></span><br><span class="line"><span class="comment">yn+=B[m]*input[n-m];</span></span><br><span class="line"><span class="comment">output[n]=yn;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">**********注释到这里*/</span></span><br><span class="line"><span class="comment">//convol就是ccs自带的卷积函数</span></span><br><span class="line">convol(input,h,output,L,hn);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);<span class="comment">//循环等待</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(3)    编写成代码后运行，提示缺少头文件：</p><p><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v29f65ed1db8474ed4b65eda6e71082105.png" style="zoom:50%;" /><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v22e6b2b8913dd4f3aa9cb6b1cd67065b2.png" alt=""></p><p>(4)    将头文件添加后依旧提示缺少头文件tms320.h</p><p><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v22e6b2b8913dd4f3aa9cb6b1cd67065b2.png" alt=""></p><p>(5)    继续寻找添加：添加进去依旧报错，经资料查找，需要将下面的内容全都copy过来；</p><p><img src="https://pic7.58cdn.com.cn/nowater/webim/big/n_v2e019e14a99324ad49720b04aaa831d2b.png" style="zoom:50%;" /></p><p>(6)    之后在项目右键，选择buildoptions，打开的窗口进行下面的操作，引入头文件目录：</p><p><img src="https://pic3.58cdn.com.cn/nowater/webim/big/n_v27f26fa62c71147a0b2b60da34efc252c.png" style="zoom:50%;" /></p><p>(7)    低通滤波的结果：</p><p> <img src="https://pic2.58cdn.com.cn/nowater/webim/big/n_v2e7c6932a142e414b9c526c7f24aaa780.png" style="zoom:50%;" /></p><p>(8)    高通滤波的结果：</p><p><img src="https://pic5.58cdn.com.cn/nowater/webim/big/n_v256eabf717aae4d27a804eaacd1d51961.png" style="zoom:50%;" /></p><p>​            实验结果分析：使用CCS的内联函数程序的运行时间是要远远小于直接使用c语言书写的，这也就是算法差异带来的实际效果的差        异，这点在实验中体现的很明显。</p>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;progress&quot;&gt;&lt;div class=&quot;progress-bar-animated progress-bar progress-bar-striped bg-orange&quot;  style=&quot;width: 100%&quot; aria-valuenow=&quot;100</summary>
      
    
    
    
    <category term="实验报告" scheme="http://example.com/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="DSP原理与应用" scheme="http://example.com/tags/DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>山东大学DSP原理与应用实验3-汇编实验</title>
    <link href="http://example.com/2022/04/29/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E9%AA%8C3-%E6%B1%87%E7%BC%96%E5%AE%9E%E9%AA%8C/"/>
    <id>http://example.com/2022/04/29/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E9%AA%8C3-%E6%B1%87%E7%BC%96%E5%AE%9E%E9%AA%8C/</id>
    <published>2022-04-29T07:43:29.000Z</published>
    <updated>2022-05-02T12:48:10.173Z</updated>
    
    <content type="html"><![CDATA[<h1 id="山东大学DSP原理与应用实验3-汇编实验"><a href="#山东大学DSP原理与应用实验3-汇编实验" class="headerlink" title="山东大学DSP原理与应用实验3-汇编实验"></a>山东大学DSP原理与应用实验3-汇编实验</h1><h2 id="一、实验要求"><a href="#一、实验要求" class="headerlink" title="一、实验要求"></a>一、实验要求</h2><details class="folding-tag" cyan><summary> 点击展开 </summary>              <div class='content'>              <ol><li><p>利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。</p></li><li><p>利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。</p></li><li><p>编写汇编程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。</p></li><li><p>与实验二的耗时进行比较。</p></li></ol>              </div>            </details><h2 id="二、实验内容及步骤"><a href="#二、实验内容及步骤" class="headerlink" title="二、实验内容及步骤"></a>二、实验内容及步骤</h2><h3 id="1-利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。"><a href="#1-利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。" class="headerlink" title="1.利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。"></a><strong>1.利用MATLAB的滤波器设计软件，生成低通滤波器、高通滤波器，分别给出滤波器系数。</strong></h3><details class="folding-tag" yellow><summary> 点击展开 </summary>              <div class='content'>              <p>基本步骤与实验二完全一致；但是便于汇编指令的使用，我对滤波器的阶数做了相应的调整，具体步骤如下：</p><p>(1)   打开Matlab软件，在命令行窗口输入filterDesigner指令，打开滤波器设计工具窗口；</p><p>(2)   设置滤波器的相关参数，这里选择FIR数字低通滤波器，相关参数如下所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/1.png" alt="1.png" style="zoom:50%;" /></p><p>选择海明窗，低通滤波器，10阶，截止频率为600Hz，抽样频率为4096Hz<br>(3)    在matlab源码中，选中主要部分，并去掉最后一行的分号，在控制台输出滤波器系数：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/2.png" alt="2.png" style="zoom:50%;" /></p><p>(4)    由于CCS汇编不能直接读取十进制小数，使用下面命令进行转化；h=round(b*2^15)</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/3.png" alt="3.png" style="zoom:50%;" /></p><p>这是低通滤波器的滤波系数<br>(5)    选择FIR数字高通滤波器，相关参数如下所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/4.png" alt="4.png" style="zoom:50%;" /></p><p>(6)    下面需要得到滤波器的系数，首先将设计好的滤波器用代码形式查看：<br>(7)    在matlab源码中，选中主要部分，并去掉最后一行的分号，在控制台输出滤波器系数：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/5.png" alt="5.png" style="zoom:50%;" /></p><p>(8)    由于CCS汇编不能直接读取十进制小数，使用下面命令进行转化；h=round(b*2^15)</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/6.png" alt="6.png" style="zoom:50%;" /><img src="https://img.wang.232232.xyz/img/2022/05/02/7.png" alt="7.png"></p><p>(9)    这里得到滤波器的系数在CCS的汇编中将要用到</p>              </div>            </details><h2 id="2-利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。"><a href="#2-利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。" class="headerlink" title="2.利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。"></a>2.利用MATLAB产生由不同的正弦波合成的波形文件，送入CCS。</h2><details class="folding-tag" blue><summary> 点击展开 </summary>              <div class='content'>              <p>CCS软件可以很方便的使用C语言或者汇编语言实现DSP信号的处理操作，但是产生复杂的输入信号数据就会比较麻烦，但是MATLAB却可以很轻松简单的完成这些操作。<br>我们使用的时候需要将MATLAB生成的数据文件导入到CCS中，.dat文件是CCS能够识别的文件格式。<br>(1)    输入信号产生的MATLAB源代码：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">f1=<span class="number">100</span>;</span><br><span class="line">f2=<span class="number">1500</span>;</span><br><span class="line">fs=<span class="number">4096</span>;</span><br><span class="line">N=<span class="number">256</span>;</span><br><span class="line">T=<span class="number">1</span>/fs;</span><br><span class="line">n=<span class="number">0</span>:N;</span><br><span class="line">y1=<span class="number">1024</span>*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*f1*n*T);</span><br><span class="line">y2=<span class="number">1024</span>*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*f2*n*T);</span><br><span class="line">y=y1+y2;</span><br><span class="line">xto_ccs=<span class="built_in">round</span>(y);</span><br><span class="line">fid=fopen(<span class="string">&#x27;firin.inc&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);<span class="comment">%将文件头写入文件，将生成的y信号写入到文件，格式四位小数</span></span><br><span class="line">fprintf(fid,<span class="string">&#x27; .word  %d\n&#x27;</span>,xto_ccs);</span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><p>(2)    MATLAB中运行结果：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/7.png" alt="7.png" style="zoom:50%;" /></p><p>这里是两组信号叠加产生的的输入信号波形，f1从100Hz-100<em>256Hz；f2从1500Hz到1500</em>256Hz。（相当于叠加了噪声信号）<br>(3)    程序运行的结果，在bin目录的DSP1目录下产生一个firin.inc的文件，如上图所示：<br>输出的时候 .word之前一定要加上空格！！<br>(4)    可以用记事本的方式打开查看数据内容，一组数，如下图：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/8.png" alt="8.png" style="zoom:50%;" /></p><p>(5)    将firin.inc文件复制到CCS工程项目的文件目录下，便于实验时调用：</p>              </div>            </details><h2 id="3-编写汇编程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。"><a href="#3-编写汇编程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。" class="headerlink" title="3.编写汇编程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。"></a>3.编写汇编程序，分别实现低通、高通滤波，用CCS画出波形，给出结果分析。</h2><details class="folding-tag" orange><summary> 点击展开 </summary>              <div class='content'>              <p>(1)    建立新的工程：取名为volume6</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/9.png" alt="9.png" style="zoom:50%;" /></p><p>(2)    新建文件</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/10.png" alt="10.png" style="zoom:50%;" /><br>在文件中编辑实验用到的汇编代码：<br>这里给出源代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">.title &quot;firtest.asm&quot;</span><br><span class="line">.mmregs</span><br><span class="line"> .global start</span><br><span class="line"> .def start</span><br><span class="line"> .def _c_int00 </span><br><span class="line">K0 .set 1 </span><br><span class="line">K .set 3259 ;输入样本数据个数</span><br><span class="line">input: .copy &quot;firin.inc&quot;</span><br><span class="line">output: .space 1024</span><br><span class="line">table .sect &quot;table&quot; ;FIR 滤波器系数</span><br><span class="line">N .set 10 ;FIR 滤波器阶数</span><br><span class="line">CN: .word  -171,-232,538,3528,7791,9878,7791,3528,538,-232,-171</span><br><span class="line">;CN: .word  -36,-384,948,181,-9116,13490,-9116,181,948,-384,-36</span><br><span class="line"></span><br><span class="line"> .data</span><br><span class="line"></span><br><span class="line"> .text</span><br><span class="line">_c_int00 b start </span><br><span class="line"> nop</span><br><span class="line"> nop</span><br><span class="line">start: RSBx FRCT ;小数乘法编程时，设置 FRCT(小数方式)位 </span><br><span class="line"> STM input,AR1 ;AR1 指向 FIR 滤波器输入数据存储空间地址</span><br><span class="line"> STM output,AR4 ;AR4 指向 FIR 滤波器输出数据存储空间地址</span><br><span class="line"> STM #K-1,BRC</span><br><span class="line"> RPTB LOOP</span><br><span class="line"> SUB A</span><br><span class="line"> MVMM AR1,AR2</span><br><span class="line"> STM CN,AR3</span><br><span class="line"> RPT #N-1</span><br><span class="line"> MAC *AR2+,*AR3+,A; 双操作数寻址,A=(AR2)*(AR3)+A;AR2 和 AR3 地址加 1</span><br><span class="line"> STH A,*AR4+ ; x地址的内容左移16位加B的高端字,结果放A</span><br><span class="line">LOOP: LD *AR1+,A </span><br><span class="line">EEND B EEND</span><br><span class="line"> .end</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>(3)    保存文件，并命名firtest.asm汇编文件<br>(4)    编译，提示无错即可，如下图所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/11.png" alt="11.png" style="zoom:50%;" /></p><p>选择Compile Files</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/12.png" alt="12.png" style="zoom:50%;" /></p><p>(5)    构建工程build<br>在Project菜单中，选择Build</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/13.png" alt="13.png" style="zoom:50%;" /></p><p>(6)    装载out文件</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/14.png" alt="14.png" style="zoom:50%;" /><br><img src="https://img.wang.232232.xyz/img/2022/05/02/15.png" alt="15.png" style="zoom:50%;" /></p><p>(7)    view中观察输入输出图像，使用方式如下图所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/16.png" alt="16.png" style="zoom:50%;" /></p><p>(8)    分别选择时域分析，频域分析，入口地址为输入数组input，观察输出时改为输出数组output <img src="https://img.wang.232232.xyz/img/2022/05/02/17.png" alt="17.png" style="zoom:50%;" /><br><img src="https://img.wang.232232.xyz/img/2022/05/02/18.png" alt="18.png" style="zoom:50%;" /></p><p>其它选项默认即可<br>(9)    打开四个窗口观察输入输出时域和频域的波形：</p><p>(10)    点击Debug→run运行程序，</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/19.png" alt="19.png" style="zoom:50%;" /></p><p>(11)    运行一段时候点击halt中止，则会在四个窗口中输出对应的波形，如下图所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/20.png" alt="20.png" style="zoom:50%;" /></p><p>此部分为低通滤波，可以看到，输入信号的高频部分和高频噪声都被率除了，滤波效果不错，基本无失真。<br>(12)    高通滤波的步骤与上面保持一致，记得将高通滤波器的设计参数以及滤波器系数设置好；滤波器设计参数如下：<br>截止频率1200Hz，抽样频率4096Hz，海明窗10阶FIR数字滤波器<br>滤波器系数如下：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/21.png" alt="21.png" style="zoom:50%;" /></p><p>(13)    在汇编代码中，将滤波器系数更换为高通滤波器系数，并且编译、构建、装载、运行、分析；具体步骤与上低通滤波器完全一致，就不再罗列；<br>tips：在仿真低通滤波后进行高通滤波并不需要退出重进，只需要将装载的项目unload即可，具体步骤如下：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/22.png" alt="22.png" style="zoom:50%;" /></p><p>选择需要unload的项目，或者直接all。<br>修改后的部分代码：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/23.png" alt="23.png" style="zoom:50%;" /></p><p>(14)    高通滤波汇编代码的编译结果：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/24.png" alt="24.png" style="zoom:50%;" /></p><p>(15)    高通滤波汇编代码的构建结果：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/25.png" alt="25.png" style="zoom:50%;" /></p><p>(16)    高通滤波结果如图所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/26.png" alt="26.png" style="zoom:50%;" /></p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/27.png" alt="27.png" style="zoom:50%;" /></p><p>可以看到高通滤波的结果相比于低通滤波的效果要差一些，这是截止频率设定的问题， 滤波器设计的时候，截止频率给出的是1200Hz，而输入信号的设定方式为低频100-100*256Hz，连续的频率，因此出现这种情况在可控范围内即可；如果要提高滤波效果，可以在滤波器设计的时候，使用更高阶的滤波器，或者使用适合高通滤波的窗函数设计法设计滤波器。</p>              </div>            </details><h2 id="4-与实验二的耗时进行比较。"><a href="#4-与实验二的耗时进行比较。" class="headerlink" title="4.与实验二的耗时进行比较。"></a>4.与实验二的耗时进行比较。</h2><details class="folding-tag" green><summary> 点击展开 </summary>              <div class='content'>              <p>以高通滤波为例，进行演示；同样为进行优化和不同优化等级下的耗时比较</p><p>在结束位置设置断点，由于这里已经运行过，因此断点设置好以后需要让仿真restart；<br>修改优化级别进行仿真的时候，每次都需要unload，然后修改，然后rebuild，在加载设置断点运行；<br>具体步骤如下：<br>在工程处右键，选择如下内容：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/28.png" alt="28.png" style="zoom:50%;" /></p><p>选择优化级别，如下图所示：</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/29.png" alt="29.png" style="zoom:50%;" /></p><p>完成上面的步骤以后，unload项目，然后rebuild，在load，设置断点，运行；</p><p><img src="https://img.wang.232232.xyz/img/2022/05/02/30.png" alt="30.png" style="zoom:50%;" /></p><p>汇编代码的效率显而易见，汇编代码的效率几乎是最C代码高级别优化后的100倍。<br>相较于前面的c语言程序运行的时间，汇编代码运行的效率有了大幅度的优化，但是毕竟这些时间相比于编程的时间而言就微不足道了，汇编的代码虽然运行效率高，但是编写过程复杂，对我们十分不友好；相比于运行的这一点点时间，当然更倾向于简单高效的C语言编程。</p>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;山东大学DSP原理与应用实验3-汇编实验&quot;&gt;&lt;a href=&quot;#山东大学DSP原理与应用实验3-汇编实验&quot; class=&quot;headerlink&quot; title=&quot;山东大学DSP原理与应用实验3-汇编实验&quot;&gt;&lt;/a&gt;山东大学DSP原理与应用实验3-汇编实验&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="实验报告" scheme="http://example.com/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="DSP原理与应用" scheme="http://example.com/tags/DSP%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>考研单词笔记3</title>
    <link href="http://example.com/2022/04/28/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B03/"/>
    <id>http://example.com/2022/04/28/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B03/</id>
    <published>2022-04-28T08:55:57.000Z</published>
    <updated>2022-05-02T10:40:49.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="考研单词笔记3"><a href="#考研单词笔记3" class="headerlink" title="考研单词笔记3"></a>考研单词笔记3</h2><p>The Examination Of Postgraduates</p><hr><details class="folding-tag" cyan><summary> 查看 </summary>              <div class='content'>              <blockquote><p>distinguish    vi,vt    区分，辨别，分清</p><p>instinct    n    本能天性，直觉</p><p>vulgar    adj    粗俗的，俗气的</p><p>deteriorate    vi    恶化，变坏，衰退</p><p>curb    vt,n    控制抑制；起控制作用的事物</p><p>stem    n，vt,vi    植物的茎秆；阻止遏制；源于</p><p>evolve    vivt    进化，逐步发展</p><p>steer    vtvi    驾驶，行驶</p><p>refrain    vi,n    克制避免；陈词滥调，副歌</p><p>restrain    vt    用武力阻止，克制</p><p>constrain    vt    限制，约束，强迫</p><p>institute    n    学院，学会</p><p>specialize    vi    专功，专门研究</p><p>speciality    n    特长，专业，专长</p><p>recur    vi    重现，复发，再来</p><p>underline    vt    构成…的基础或起因</p><p>endure    v    忍耐，忍受，持久</p><p>storage    n    贮藏，存储，贮存量</p><p>abundant    adj    大量的，充裕的</p><p>trail        审判试用试验</p><p>arrest    n    拘留逮捕，吸引注意</p><p>gamble    v    冒险赌博投机</p><p>chronic    adj    慢性的，长久的</p><p>intrinsic    adj    固有的，内在的 ，本质的</p><p>formidable    adj    可怕的，令人敬畏的</p><p>surplus    n    过剩，剩余</p><p>nuclear    adj    核能的，核心的</p><p>nucleus    n    原子（核）</p><p>blast    n    爆炸，一阵风，一股气流</p><p>deadly    adj    致命的，势不两立的，极端的</p><p>expedition    n    探险队</p><p>dismay    n    失望，气馁，惊恐</p><p>illustrate    vt    说明，加插图</p><p>exemplify    vt    举例证明</p><p>demonstrate    vt     证明，举行示威游行</p><p>demonstration    n    论证，示威游行</p><p>symptom    n    征兆，特征</p><p>diagnose    vt    诊断，判断    diagnosis    n    诊断</p><p>terminal    n    终点，终端</p><p>imply    vt    暗示，意味着</p><p>cite    vt    引用，引证</p></blockquote>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;考研单词笔记3&quot;&gt;&lt;a href=&quot;#考研单词笔记3&quot; class=&quot;headerlink&quot; title=&quot;考研单词笔记3&quot;&gt;&lt;/a&gt;考研单词笔记3&lt;/h2&gt;&lt;p&gt;The Examination Of Postgraduates&lt;/p&gt;
&lt;hr&gt;
&lt;details</summary>
      
    
    
    
    <category term="考研单词笔记" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>利用DNS加快GitHub、Steam等平台的访问速度</title>
    <link href="http://example.com/2022/04/27/%E5%88%A9%E7%94%A8DNS%E5%8A%A0%E5%BF%ABGitHub%E3%80%81Steam%E7%AD%89%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6/"/>
    <id>http://example.com/2022/04/27/%E5%88%A9%E7%94%A8DNS%E5%8A%A0%E5%BF%ABGitHub%E3%80%81Steam%E7%AD%89%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6/</id>
    <published>2022-04-27T05:18:35.000Z</published>
    <updated>2022-05-02T10:40:35.152Z</updated>
    
    <content type="html"><![CDATA[<h2 id="利用DNS加速各平台的访问速度"><a href="#利用DNS加速各平台的访问速度" class="headerlink" title="利用DNS加速各平台的访问速度"></a>利用DNS加速各平台的访问速度</h2><h3 id="一、国内访问GitHub，Steam等平台慢的原因"><a href="#一、国内访问GitHub，Steam等平台慢的原因" class="headerlink" title="一、国内访问GitHub，Steam等平台慢的原因"></a>一、国内访问GitHub，Steam等平台慢的原因</h3><p>GitHub的<a href="https://so.csdn.net/so/search?q=CDN&amp;spm=1001.2101.3001.7020">CDN</a>(Content Delivery Network,即内容分发网络)域名遭到DNS污染，无法连接使用GitHub的加速分发服务器，所以国内访问速度较慢。</p><h3 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h3><p>修改Hosts文件，将域名解析直接指向IP地址，绕过DNS解析</p><p>具体可参考<a href="https://www.cnblogs.com/liuchao888/p/11733996.html">GitHub访问速度慢的一种优化方法 - 西风鬼 - 博客园 (cnblogs.com)</a></p><p>这里给出一款好用的开源免费软件</p><p>链接：<a href="https://pan.baidu.com/s/1_YRNkUSLnj7LFhDt8GPhYw?pwd=sduj">https://pan.baidu.com/s/1_YRNkUSLnj7LFhDt8GPhYw?pwd=sduj</a><br>提取码：sduj </p><p>解压后即可使用，使用简单</p><p>选择需要加速的应用，解析到对应IP即可</p><h3 id="三、结语"><a href="#三、结语" class="headerlink" title="三、结语"></a>三、结语</h3><p>加速访问GitHub、Steam等平台的方法很多，本文提供的仅为个人观点。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;利用DNS加速各平台的访问速度&quot;&gt;&lt;a href=&quot;#利用DNS加速各平台的访问速度&quot; class=&quot;headerlink&quot; title=&quot;利用DNS加速各平台的访问速度&quot;&gt;&lt;/a&gt;利用DNS加速各平台的访问速度&lt;/h2&gt;&lt;h3 id=&quot;一、国内访问GitHub，</summary>
      
    
    
    
    <category term="软件工具" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>解决github绑定域名自动解绑问题</title>
    <link href="http://example.com/2022/04/27/%E8%A7%A3%E5%86%B3github%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E8%87%AA%E5%8A%A8%E8%A7%A3%E7%BB%91%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/04/27/%E8%A7%A3%E5%86%B3github%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E8%87%AA%E5%8A%A8%E8%A7%A3%E7%BB%91%E9%97%AE%E9%A2%98/</id>
    <published>2022-04-27T04:57:40.000Z</published>
    <updated>2022-05-02T10:40:21.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决GitHub的库绑定域名后更新文章自动解绑问题"><a href="#解决GitHub的库绑定域名后更新文章自动解绑问题" class="headerlink" title="解决GitHub的库绑定域名后更新文章自动解绑问题"></a>解决GitHub的库绑定域名后更新文章自动解绑问题</h2><p>在使用hexo部署博客文章时，很多人都会遇到一个问题：</p><p>为什么每次部署发布文章的时候，GitHub库绑定的域名就自动解绑了呢？</p><p>先上答案：将CNAME文件置于根目录下的source文件夹中。</p><p>原理：就是每次使用hexo将本地资源部署到GitHub库的时候，会自动覆盖之前的内容，我们绑定域名的时候有一个文件CNAME，也会被自动覆盖；基于此，我们在本地的目录下，找到source文件夹，在这里新建一个CNAME文件，这样，每次使用hexo部署的时候，都会将其上传到GitHub，自动覆盖之前的CNAME文件。</p><p>问题解决！</p><h2 id="什么是CNAME"><a href="#什么是CNAME" class="headerlink" title="什么是CNAME?"></a>什么是CNAME?</h2><h3 id="域名解析："><a href="#域名解析：" class="headerlink" title="域名解析："></a>域名解析：</h3><p>最初访问互联网采用的是我们耳熟能详的IP地址，后来人们发现使用IP太多，空空的数字，不好记忆；于是便出现了域名，那什么是域名呢？举个简单的例子，www.wechat.com 这就是域名；域名虽然便于我们理解和记忆，但是路由器并不认识，这个时候便有了域名解析；提到域名解析就必然会提到DNS服务器，置于DNS解析的具体过程请大家自行查找相关资料。</p><h3 id="A记录和CNAME记录"><a href="#A记录和CNAME记录" class="headerlink" title="A记录和CNAME记录"></a>A记录和CNAME记录</h3><p>有自己域名的小伙伴肯定知道这两个概念，他们在域名解析中扮演了十分重要的角色；</p><p>A记录，就是将域名解析成IP；CNAME就是将域名解析成另外的域名；</p><p>比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">某页域名myblog.github的IP为102.102.1.1</span><br><span class="line">你的域名myblog.com</span><br></pre></td></tr></table></figure><p>使用CNAME记录解析，便可以将你的域名myblog.com解析到myblog.github，然后在解析到对应的IP地址102.102.1.1</p><p>使用A记录解析，便可以将你的域名myblog.com解析到102.102.1.1</p><p>域名解析选A记录还是CNAME记录？</p><p>一般情况下都建议使用CNAME记录。CNAME记录可用于CDN加速，通过CDN加速别名解析网站域名，这样既可以起到加速网站的作用，又能隐藏网站的真实IP，减少被攻击的几率。</p><p>另外，对于搜索引擎对网站的收录，无论是A记录还是CNAME记录都是没有差别的。</p><p>CNAME解析的记录值：在网站管理里面，找到客户网站部署位置这里显示的CNAME解析域名即为CNAME解析的记录值。</p><p>A记录解析的记录值：可以ping一下客户网站部署位置的CNAME解析域名，得到的IP就是做A记录的记录值注意只有@这条记录做A记录，其他全部做CNAME记录。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>简单的说，A记录直接指向IP地址，CNAME记录指向域名。IP地址是互联网世界中唯一的，而CNAME指向的域名也要指向A记录，也就是说IP地址可以按需更换，而无需变更CNAME的记录值。</p><p>参考原文链接：<a href="https://blog.csdn.net/weixin_35969684/article/details/112337708">https://blog.csdn.net/weixin_35969684/article/details/112337708</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解决GitHub的库绑定域名后更新文章自动解绑问题&quot;&gt;&lt;a href=&quot;#解决GitHub的库绑定域名后更新文章自动解绑问题&quot; class=&quot;headerlink&quot; title=&quot;解决GitHub的库绑定域名后更新文章自动解绑问题&quot;&gt;&lt;/a&gt;解决GitHub的库绑</summary>
      
    
    
    
    <category term="GitHub" scheme="http://example.com/categories/GitHub/"/>
    
    
    <category term="GitHub" scheme="http://example.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>考研单词笔记2</title>
    <link href="http://example.com/2022/04/27/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B02/"/>
    <id>http://example.com/2022/04/27/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B02/</id>
    <published>2022-04-27T04:17:33.000Z</published>
    <updated>2022-05-02T10:41:12.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="考研单词笔记2"><a href="#考研单词笔记2" class="headerlink" title="考研单词笔记2"></a>考研单词笔记2</h2><blockquote><p>initiate    vt，n    开始创始，新入会的人</p><p>principal    adj，n    主要的，校长</p><p>verdict n 裁决，裁定，意见，决定</p><p>implicit    adj 含蓄的，内含的</p><p>thorough adj 全面的，彻底的，仔细的</p><p>tragedy    n 不幸，悲剧</p><p>spoil    vt，vi，n    破坏溺爱；变质；赃物，战力品</p><p>reluctant    adj    勉强的不情愿的</p><p>rational    adj    合理的，理性的</p><p>concise    adj    简洁的，简明的</p><p>joint    adj    联合的，共同的</p><p>pursue    vt    追求，继续进行，追赶</p><p>trail    vt，vi，n    拖拉，跟踪；痕迹踪迹</p><p>indulge    vi,vt    沉迷于，满足，纵容</p><p>genius    n    天才人物，天赋本领</p><p>ingenious    adj    精巧的，巧妙地</p><p>forge     vt,vi,n    缔造开创；稳步前进；铁匠铺</p><p>harmony    n    融洽，和睦，和谐</p><p>simultaneous    adj    同步的，同时存在的</p><p>homogeneous    adj    由同种族人组成的，同类组成的</p><p>neighborhood    n    居住区，街坊邻居</p><p>staff    n，vt    全体职员；任职于</p><p>occasion    n    特殊场合，时机</p><p>recur    vi    再次发生，再次出现</p><p>curb    vt    控制，抑制</p><p>stem    n，vt,vi    植物茎秆；阻止遏制；源于</p><p>vulgar    adj    粗俗的，俗气的，下流的</p><p>deteriorate    vi    恶化，变坏，衰退</p><p>extinct    adj    已灭绝的，消失的</p><p>instinct    n    本能天性直觉</p><p>-</p><p>-</p><p>-</p><p>-</p><p>-</p><p>-</p><p>-</p><p>-</p><p>-</p><p>-</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;考研单词笔记2&quot;&gt;&lt;a href=&quot;#考研单词笔记2&quot; class=&quot;headerlink&quot; title=&quot;考研单词笔记2&quot;&gt;&lt;/a&gt;考研单词笔记2&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;initiate    vt，n    开始创始，新入会的人&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="考研单词笔记" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>经典的错误，标准的零分</title>
    <link href="http://example.com/2022/04/26/%E7%BB%8F%E5%85%B8%E7%9A%84%E9%94%99%E8%AF%AF%EF%BC%8C%E6%A0%87%E5%87%86%E7%9A%84%E9%9B%B6%E5%88%86/"/>
    <id>http://example.com/2022/04/26/%E7%BB%8F%E5%85%B8%E7%9A%84%E9%94%99%E8%AF%AF%EF%BC%8C%E6%A0%87%E5%87%86%E7%9A%84%E9%9B%B6%E5%88%86/</id>
    <published>2022-04-26T13:08:28.000Z</published>
    <updated>2022-05-02T10:46:09.144Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tucang.cc/api/image/show/07a6f9c91144f594189c5bf12a3d0ec0" alt="经典错误标准零分.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tucang.cc/api/image/show/07a6f9c91144f594189c5bf12a3d0ec0&quot; alt=&quot;经典错误标准零分.png&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>考研单词笔记1</title>
    <link href="http://example.com/2022/04/26/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B01/"/>
    <id>http://example.com/2022/04/26/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B01/</id>
    <published>2022-04-26T07:47:01.000Z</published>
    <updated>2022-05-02T10:40:41.875Z</updated>
    
    <content type="html"><![CDATA[<h2 id="考研单词笔记1"><a href="#考研单词笔记1" class="headerlink" title="考研单词笔记1"></a>考研单词笔记1</h2><hr><blockquote><p>prone              adj    有倾向的，俯卧的</p><p>retail               n/adv/vt    零售</p><p>thereafter      adv    之后，伺候</p><p>confess           v    供认，承认，坦白</p><p>scandal           n    丑闻，丑行</p><p>immune          adj    免疫的，不受影响的</p><p>corrupt           adj、v    腐败的，不道德的，使腐化</p><p>loan                 n    贷款</p><p>mortgage       n、vt抵押借款</p><p>identical         adj    完全相同的，同样的</p><p>identity           n    身份本体，个体，特性，相同</p><p>inevitable       adj    不可避免的，必然发生的</p><p>yield                vt    出产，得出，放弃</p><p>adhere            vi    附着，遵循（规章）</p><p>peer                n、vi    同龄人，端详</p><p>leisure            n    闲暇，空闲</p><p>recreation      n    休闲，娱乐</p><p>shield              n、vt    盾牌，掩护物，保护某人或某物</p><p>persevere       vi    坚持不懈，锲而不舍</p><p>facility             n    设备设施，天资</p><p>utility               n、adj    公共事业，实用，多功能的，多用途的</p><p>utilize              vt    利用使用</p><p>consolidate    vt、vi    使加强，巩固，合并</p><p>household     n、adj    一家人，家用的</p><p>regardless     adv    不管不论</p><p>spite               n、vt    怨恨，恶意，故意伤害</p><p>spray              vt、n    喷，喷雾，喷洒</p><p>pray                vt，adv    祈祷，祈求，请问</p><p>nevertheless  adv    然而，尽管如此</p><p>provided         cong    如果，在…条件下</p><p>lest                   conj    唯恐，以免</p><p>possess            vt    拥有，具有，支配</p><p>asset                n    资产，财产</p><p>sketch             n，vt    草图素描，概述</p><p>moral              adj，n    道德的，品行道德，寓意</p><p>ethic                n    伦理，道德体系</p><p>timid                adj    胆怯的，羞怯的</p><p>interfere          vi    介入，干涉，妨碍，干扰</p><p>interval            n    间隔，中场休息</p><p>interact            vi    相互沟通，相互作用</p><p>interpret          vt，vi解释说明，口译</p><p>recommend    vt    推荐，建议</p><p>receipt             n    收据，收到，收入</p><p>recipe              n    食谱，原因</p><p>multitude        n    众多大量，民众，群众</p><p>triple                vi，vt    变成三倍</p><p>trail                  n，vi,vt     审判，试用，测试</p><p>prevail            vi    盛行，站上风，战胜</p><p>cease              vi,vt    使停止</p><p>halt                 n，vi,vt    停止，暂停</p><p>suspend        vt     暂停，中止，使停职</p><p>resume         vt，vi    继续</p><p>flourish         vi，vt,n    繁荣，挥舞，夸张动作</p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;考研单词笔记1&quot;&gt;&lt;a href=&quot;#考研单词笔记1&quot; class=&quot;headerlink&quot; title=&quot;考研单词笔记1&quot;&gt;&lt;/a&gt;考研单词笔记1&lt;/h2&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;prone              adj    有倾向的，俯</summary>
      
    
    
    
    <category term="考研单词笔记" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E5%8D%95%E8%AF%8D%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>23考研PDF课本</title>
    <link href="http://example.com/2022/04/26/23%E8%80%83%E7%A0%94PDF%E8%AF%BE%E6%9C%AC/"/>
    <id>http://example.com/2022/04/26/23%E8%80%83%E7%A0%94PDF%E8%AF%BE%E6%9C%AC/</id>
    <published>2022-04-26T01:15:39.000Z</published>
    <updated>2022-05-02T11:16:24.178Z</updated>
    
    <content type="html"><![CDATA[<h2 id="23考研课本高清PDF扫描版"><a href="#23考研课本高清PDF扫描版" class="headerlink" title="23考研课本高清PDF扫描版"></a>23考研课本高清PDF扫描版</h2><p><a href="https://imgtg.com/image/xsVov"><img src="https://i.imgtg.com/2022/04/26/xsVov.md.png" alt="xsVov.md.png"></a></p><p>无水印，阿里云盘资源</p><p><a href="https://www.aliyundrive.com/s/VkGoLuzWfpv">点此获取</a></p><p>提取码：</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;23考研课本高清PDF扫描版&quot;&gt;&lt;a href=&quot;#23考研课本高清PDF扫描版&quot; class=&quot;headerlink&quot; title=&quot;23考研课本高清PDF扫描版&quot;&gt;&lt;/a&gt;23考研课本高清PDF扫描版&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://imgtg</summary>
      
    
    
    
    <category term="考研资料" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E8%B5%84%E6%96%99/"/>
    
    
    <category term="考研" scheme="http://example.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>软件推荐-电脑文件极速搜索</title>
    <link href="http://example.com/2022/04/26/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90-%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E6%9E%81%E9%80%9F%E6%90%9C%E7%B4%A2/"/>
    <id>http://example.com/2022/04/26/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90-%E7%94%B5%E8%84%91%E6%96%87%E4%BB%B6%E6%9E%81%E9%80%9F%E6%90%9C%E7%B4%A2/</id>
    <published>2022-04-26T01:00:59.000Z</published>
    <updated>2022-05-02T10:47:29.543Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Everything：最快文件搜索利器"><a href="#Everything：最快文件搜索利器" class="headerlink" title="Everything：最快文件搜索利器"></a>Everything：最快文件搜索利器</h1><p><a href="https://imgtg.com/image/xsdsY"><img src="https://tucang.cc/api/image/show/c3de756d219a4998f57e47e4f3633259" alt="xsdsY.md.png"></a></p><h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="https://www.voidtools.com/">http://www.voidtools.com</a></p><h2 id="“Everything”-是什么？"><a href="#“Everything”-是什么？" class="headerlink" title="“Everything” 是什么？"></a>“Everything” 是什么？</h2><p>“Everything” 是 Windows 上一款搜索引擎，它能够基于文件名快速定文件和文件夹位置。</p><p>不像 Windows 内置搜索，”Everything” 默认显示电脑上每个文件和文件夹 (就如其名 “Everything”)。</p><p>您在搜索框输入的关键词将会筛选显示的文件和文件夹。</p><h2 id="“Everything”-索引全部文件需要多长时间？"><a href="#“Everything”-索引全部文件需要多长时间？" class="headerlink" title="“Everything” 索引全部文件需要多长时间？"></a>“Everything” 索引全部文件需要多长时间？</h2><p>“Everything” 仅索引文件和文件夹名，一般仅需几秒便可建立其数据库。</p><p>全新安装的 Windows 10 (大约 120,000 个文件) 仅需 1 秒即可索引完成。</p><p>索引 1,000,000 个文件将需要大约 1 分钟。</p><h2 id="“Everything”-能否搜索文件内容？"><a href="#“Everything”-能否搜索文件内容？" class="headerlink" title="“Everything” 能否搜索文件内容？"></a>“Everything” 能否搜索文件内容？</h2><p>可以，”Everything” 可以通过搜索函数 content: 来搜索文件内容。</p><p>文件内容未被索引时，搜索内容将会很慢。</p><h2 id="“Everything”-是否占用很多系统资源？"><a href="#“Everything”-是否占用很多系统资源？" class="headerlink" title="“Everything” 是否占用很多系统资源？"></a>“Everything” 是否占用很多系统资源？</h2><p>不，”Everything” 仅需要使用非常少的系统资源。</p><p>全新安装的 Windows 10 (大约 120,000 个文件) 仅需要大约 14 MB 的内存以及不到 9 MB 的硬盘空间。</p><p>1,000,000 个文件需要大约 75 MB 的内存和 45 MB 的硬盘空间。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>everything是一款非常强大的本地搜索软件，轻量但并不简单，值得下载</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Everything：最快文件搜索利器&quot;&gt;&lt;a href=&quot;#Everything：最快文件搜索利器&quot; class=&quot;headerlink&quot; title=&quot;Everything：最快文件搜索利器&quot;&gt;&lt;/a&gt;Everything：最快文件搜索利器&lt;/h1&gt;&lt;p&gt;&lt;a</summary>
      
    
    
    
    <category term="软件工具" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>常用软件推荐</title>
    <link href="http://example.com/2022/04/26/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    <id>http://example.com/2022/04/26/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</id>
    <published>2022-04-26T00:38:47.000Z</published>
    <updated>2022-05-02T10:40:56.047Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用软件推荐"><a href="#常用软件推荐" class="headerlink" title="常用软件推荐"></a>常用软件推荐</h1><h2 id="百度文库下载"><a href="#百度文库下载" class="headerlink" title="百度文库下载"></a>百度文库下载</h2><p>推荐<a href="https://pan.baidu.com/s/14Mq7d6QOlrLyxigzIt-BXg?pwd=m7tx">冰点文库</a></p><p>提取码：m7tx</p><p>使用教程：百度网盘提取链接保存，下载即可使用</p><p>复制链接，一键免费下载</p><h2 id="IDM下载器"><a href="#IDM下载器" class="headerlink" title="IDM下载器"></a>IDM下载器</h2><p>官方下载链接：</p><p><a href="http://ys-f.ysepan.com/549340427/713028443/SIuLRKu75275M326WNGJe0/idman640build11.exe">IDM官方版</a></p><p>适配win11版本<a href="http://ys-e.ysepan.com/549340455/712985354/VFtMVLr7435652GKJN5784/idman640build1.exe">IDM</a></p><p>破解方式：重置试用</p><p>仅需删除注册表信息即可重复试用30天，之后重复操作即可。</p><p>直接下载<a href="https://musetransfer.com/s/tbvsynzkd">reset.reg</a>，退出正在运行的IDM，运行reset.reg文件清除IDM注册表。</p><h2 id="免费开源视频剪辑软件-OpenShot"><a href="#免费开源视频剪辑软件-OpenShot" class="headerlink" title="免费开源视频剪辑软件 OpenShot"></a>免费开源视频剪辑软件 OpenShot</h2><p>OpenShot 创建于 2008 年，是一个免费开源的视频编辑器。可在 Linux，Mac 和 Windows 上使用。界面操作对新手比较友好。</p><p><a href="https://www.openshot.org/zh-hans/download/"> 官网下载</a></p><p>文件来自 OpenShot 官网，仅做加速下载分发用途</p><h2 id="格式工厂-Format-Factory"><a href="#格式工厂-Format-Factory" class="headerlink" title="格式工厂 (Format Factory)"></a>格式工厂 (Format Factory)</h2><p>格式工厂 (Format Factory) 是老牌知名免费音视频 / 压缩转换软件。</p><p>从 2007 年开始格式工厂一直更新保持更新，始终免费，转换、压缩 媒体文件用格式工厂很简单。</p><h3 id="格式工厂精简优化版"><a href="#格式工厂精简优化版" class="headerlink" title="格式工厂精简优化版"></a>格式工厂精简优化版</h3><p><a href="https://www.aliyundrive.com/s/8bdfdJQTWNC">https://www.aliyundrive.com/s/8bdfdJQTWNC</a><br><a href="https://www.lanzoup.com/b00ta661i">https://www.lanzoup.com/b00ta661i</a></p><p>格式工厂精简优化版 Windows ，包含经典版 / 稳定版 / 最新版，精简了多余功能去除了广告。</p><h3 id="格式工厂安卓版"><a href="#格式工厂安卓版" class="headerlink" title="格式工厂安卓版"></a>格式工厂安卓版</h3><p>格式工厂更新了安卓版本，可使用下方免费无限制版本</p><p><a href="https://musetransfer.com/s/oqzn5owqp">https://musetransfer.com/s/oqzn5owqp</a></p><p>格式工厂安卓无限制版，移除了付费功能，所有功能无限制使用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常用软件推荐&quot;&gt;&lt;a href=&quot;#常用软件推荐&quot; class=&quot;headerlink&quot; title=&quot;常用软件推荐&quot;&gt;&lt;/a&gt;常用软件推荐&lt;/h1&gt;&lt;h2 id=&quot;百度文库下载&quot;&gt;&lt;a href=&quot;#百度文库下载&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="软件工具" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>山东大学 自动控制原理实验3</title>
    <link href="http://example.com/2022/04/25/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6-%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C3/"/>
    <id>http://example.com/2022/04/25/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6-%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C3/</id>
    <published>2022-04-25T08:51:25.000Z</published>
    <updated>2022-05-02T10:41:52.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运用MATLAB完成传递函数的表示和求解"><a href="#运用MATLAB完成传递函数的表示和求解" class="headerlink" title="运用MATLAB完成传递函数的表示和求解"></a><strong>运用MATLAB完成传递函数的表示和求解</strong></h2><p><em>符号运算无须事先对独立变量赋值，运算结果以标准的符号形式表达。相关指令为sym()和sysms()。</em></p><h3 id="一、-实验内容"><a href="#一、-实验内容" class="headerlink" title="一、  实验内容"></a><strong>一、</strong>  <strong>实验内容</strong></h3><p>运用符号运算，编程完成书习题2-12（b）、2-15（d）、另任选其它题1题系统传递函数的表示和求解。</p><h3 id="二、-实验要求"><a href="#二、-实验要求" class="headerlink" title="二、  实验要求"></a><strong>二、</strong>  <strong>实验要求</strong></h3><p>方案设计，分析解题文本，编程实现。</p><h3 id="三、-实验步骤"><a href="#三、-实验步骤" class="headerlink" title="三、  实验步骤"></a><strong>三、</strong>  <strong>实验步骤</strong></h3><h4 id="2-12（b），求传递函数C-s-R-s-和C-s-N-s"><a href="#2-12（b），求传递函数C-s-R-s-和C-s-N-s" class="headerlink" title="2-12（b），求传递函数C(s)/R(s)和C(s)/N(s)"></a><strong>2-12（b），求传递函数C(s)/R(s)和C(s)/N(s)</strong></h4><h5 id="1-结构框图"><a href="#1-结构框图" class="headerlink" title="1.  结构框图"></a><strong>1.</strong>  <strong>结构框图</strong></h5><p><img src="https://s2.loli.net/2022/04/25/vZfDWqyn4zHKduN.png" alt="1.png"></p><h5 id="2-结构框图分析"><a href="#2-结构框图分析" class="headerlink" title="2.  结构框图分析"></a><strong>2.</strong>  <strong>结构框图分析</strong></h5><h6 id="1-基本结构分析"><a href="#1-基本结构分析" class="headerlink" title="(1) 基本结构分析"></a><strong>(1)</strong> <strong>基本结构分析</strong></h6><p><strong>当只考虑输入R(s)作用时，扰动输入N（s）=0：</strong></p><p>根据上面的结构框图可以很明显的发现存在交叉，因此需要对结构框图进行等效化简。</p><p>1)  G1（s）的比较点后移，将G2（s）和G3（s）构成的并联系统合并后的框图如下：</p><p><img src="https://s2.loli.net/2022/04/25/kNqtmCaVsIfZyJx.png" alt="2.png"></p><p>2)  将单位反馈回路的比较点前移，得到如下框图</p><p><img src="https://s2.loli.net/2022/04/25/VXlYD7u5vztAgPN.png" alt="3.png"></p><p>3)  根据上面的结构框图即可很简单的设计系统函数的代码，</p><p>G1和G2+G2并联；</p><p>G4和G2+G3构成反馈回路；</p><p>前面的并联部分和后面的反馈部分构成串联系统。</p><p>4)  根据这个思路，编程实现即可</p><p><strong>当只考虑扰动输入N(s)作用时，输入R（s）=0：</strong></p><p>1)  将R(s)置0，等效结构图如下图所示：</p><p><img src="https://s2.loli.net/2022/04/25/1mSO6XcvoCjl8N3.png" alt="4.png"></p><p>2)  该结构图已经足够简化，后面直接进行代码设计即可</p><p>3)  G2和G3构成并联负反馈；</p><p>G2和G3构成的并联整体与G4构成负反馈</p><p>得到结果</p><h5 id="3-源代码"><a href="#3-源代码" class="headerlink" title="3.  源代码"></a><strong>3.</strong>  <strong>源代码</strong></h5><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 当只考虑输入R(s)作用时，扰动输入N（s）=0：</span></span><br><span class="line">G1=sym(<span class="string">&#x27;G1&#x27;</span>);<span class="comment">%符号定义G1</span></span><br><span class="line">G2=sym(<span class="string">&#x27;G2&#x27;</span>);<span class="comment">%</span></span><br><span class="line">G3=sym(<span class="string">&#x27;G3&#x27;</span>);<span class="comment">%</span></span><br><span class="line">G4=sym(<span class="string">&#x27;G4&#x27;</span>);<span class="comment">%</span></span><br><span class="line">sys1=G2+G3;<span class="comment">%计算由G2和G3组成的串联结构</span></span><br><span class="line">sys2=sys1+G1*G2;<span class="comment">%G2+G3与G1G2构成并联结构</span></span><br><span class="line">sys3=G4/(<span class="number">1</span>+G4*sys1);<span class="comment">%G4与G2+G3构成负反馈回路</span></span><br><span class="line">sys=sys2*sys3<span class="comment">%不加分号，在命令窗口打印结果，前后两部分的串联</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%当只考虑扰动输入N(s)作用时，输入R（s）=0：</span></span><br><span class="line">pause<span class="comment">%暂停，空格继续</span></span><br><span class="line">clc; <span class="comment">%清空命令行窗口 </span></span><br><span class="line">SYS1=G2+G3;<span class="comment">%G2和G3构成并联结构</span></span><br><span class="line">SYS=G4/(<span class="number">1</span>+SYS1*G2)<span class="comment">%不加分号，输出结果，G4与G2+G3构成负反馈结构</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.<strong>  </strong>实验结果及分析**</p><p><strong>当只考虑输入R(s)作用时，扰动输入N（s）=0：</strong></p><p><img src="https://s2.loli.net/2022/04/25/m5xa68YWJUfCHjA.png" alt="5.png"></p><p><strong>当只考虑扰动输入N(s)作用时，输入R（s）=0：</strong></p><p><img src="https://s2.loli.net/2022/04/25/2yHR78zlKmgLkq9.png" alt="6.png"></p><p>与实际计算结果保持一致</p><h4 id="2-15（d），求传递函数C-s-R-s-和C-s-N-s"><a href="#2-15（d），求传递函数C-s-R-s-和C-s-N-s" class="headerlink" title="2-15（d），求传递函数C(s)/R(s)和C(s)/N(s)"></a><strong>2-15（d），求传递函数C(s)/R(s)和C(s)/N(s)</strong></h4><h5 id="1-信号流图"><a href="#1-信号流图" class="headerlink" title="1.  信号流图"></a><strong>1.</strong>  <strong>信号流图</strong></h5><p><img src="https://s2.loli.net/2022/04/25/GdMZKPhuxlSseaC.png" alt="7.png"></p><h5 id="2-结构流图分析"><a href="#2-结构流图分析" class="headerlink" title="2.  结构流图分析"></a><strong>2.</strong>  <strong>结构流图分析</strong></h5><h6 id="1-基本结构分析-1"><a href="#1-基本结构分析-1" class="headerlink" title="(1) 基本结构分析"></a><strong>(1)</strong> <strong>基本结构分析</strong></h6><p><strong>当只考虑R1时，R2为0：</strong></p><p>该结构是存在交叉的，需要将下面的反馈回路的引出点后移，由于引出点后的系数为1，因此引出点后移后反馈回路的系数并未改变，引出点后移后的结构流图如下所示：</p><p><img src="https://s2.loli.net/2022/04/25/AXjHUIwiqMfFyca.png" alt="8.png"></p><p>c和-f构成反馈回路h1；</p><p>b和h1构成串联结构g1；</p><p>a与g1构成并联结构g2；</p><p>e和-g构成反馈回路h2；</p><p>d和h2构成串联结构g3；</p><p>1和g3构成并联结构g4；</p><p>g2和g4构成串联结构g5；</p><p>g5和-h构成负反馈结构G；</p><p><strong>当只考虑R2时，R1为0：</strong></p><p><img src="https://s2.loli.net/2022/04/25/TYwJMBn1vcuxH7m.png" alt="9.png"></p><p>该结构图中，将-h的引出点进行了后移，但是由于后面的系数为1，因此引出点后移后反馈线的系数仍未-h；将1的引出点后移，系数变为d；</p><p>e和-g构成负反馈回路h1；</p><p>h1和1串联后与d并联构成g0；</p><p>c和-f构成负反馈回路h2；</p><p>b和h2构成串联结构g1；</p><p>g1和a构成并联结构g2；</p><p>d、g2和-h构成串联结构g3；</p><p>g3为负反馈支路，与g0构成负反馈结构g4；</p><h4 id=""><a href="#" class="headerlink" title=" "></a> </h4><h5 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h5><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">clc;<span class="comment">%清除命令行窗口</span></span><br><span class="line"><span class="comment">%当只考虑R1时，R2为0：</span></span><br><span class="line">syms a b c d e f g h l;<span class="comment">%定义符号变量</span></span><br><span class="line">h1=c/(<span class="number">1</span>+c*f);<span class="comment">%c和f构成反馈回路h1</span></span><br><span class="line">g1=b*h1;<span class="comment">%b和h1构成串联结构g1</span></span><br><span class="line">g2=a+g1;<span class="comment">%a和g1构成并联结构g2</span></span><br><span class="line">h2=e/(<span class="number">1</span>+e*g);<span class="comment">%e和g构成负反馈回路h2</span></span><br><span class="line">g3=d*h2;<span class="comment">%d和h2构成串联结构g3</span></span><br><span class="line">g4=<span class="number">1</span>+g3;<span class="comment">%1和g3并联为g4</span></span><br><span class="line">g5=g2*g4;<span class="comment">%g2和g4串联结构g5</span></span><br><span class="line">sys=g5/(<span class="number">1</span>+g5*h)<span class="comment">%g5和h构成总的负反馈回路sys</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pause<span class="comment">%</span></span><br><span class="line">clc;<span class="comment">%清除命令行窗口</span></span><br><span class="line"><span class="comment">%当只考虑R2时，R1为0：</span></span><br><span class="line">h1=e/(<span class="number">1</span>+e*g);<span class="comment">%e和g构成负反馈回路h1</span></span><br><span class="line">g0=h1+d;<span class="comment">%h1和d构成并联结构g0</span></span><br><span class="line">h2=c/(<span class="number">1</span>+c*f);<span class="comment">%c和f构成负反馈回路h2</span></span><br><span class="line">g1=b*h2;<span class="comment">%b和h2构成串联结构g1</span></span><br><span class="line">g2=g1+a;<span class="comment">%g1和a构成并联结构g2</span></span><br><span class="line">g3=d*g2*h;<span class="comment">%d和g2和h构成串联结构</span></span><br><span class="line">g4=g0/(<span class="number">1</span>+g0*g3);<span class="comment">%g0和g3构成负反馈回路</span></span><br><span class="line">sys=l*g4 <span class="comment">%不加分号，在命令行窗口输出结果</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4-实验结果"><a href="#4-实验结果" class="headerlink" title="4.  实验结果**"></a>4.<strong>  </strong>实验结果**</h5><p><img src="https://s2.loli.net/2022/04/25/9wSkAXgyNF2czxo.png" alt="10.png"></p><p><img src="https://s2.loli.net/2022/04/25/kbcerN6TFZC1iRp.png" alt="11.png"></p><p>这里可以发现，和我们的实际计算结果还是存在着偏差，至少从表达形式上是存在不一致的。</p><p>下面是手动的计算结果：</p><p><img src="https://s2.loli.net/2022/04/25/A7o12WgFbsjOEBN.png" alt="12.png"></p><h4 id="习题2-11（e）求传递函数C-s-R-s"><a href="#习题2-11（e）求传递函数C-s-R-s" class="headerlink" title="习题2-11（e）求传递函数C(s)/R(s)"></a><strong>习题2-11（e）求传递函数C(s)/R(s)</strong></h4><h5 id="1-结构框图-1"><a href="#1-结构框图-1" class="headerlink" title="1.  结构框图"></a><strong>1.</strong>  <strong>结构框图</strong></h5><p><img src="https://s2.loli.net/2022/04/25/F5uv2X3mDbCPBy8.png" alt="13.png"></p><h5 id="2-流图分析"><a href="#2-流图分析" class="headerlink" title="2.流图分析"></a><strong>2.流图分析</strong></h5><h6 id="1-基本结构分析-2"><a href="#1-基本结构分析-2" class="headerlink" title="(1) 基本结构分析"></a><strong>(1)</strong> <strong>基本结构分析</strong></h6><p>该结构是存在交叉的，是无法直接使用符号表达式求解传递函数的，因此需要将结构框图简化。将H2后面的引出点进行前移，H2→H2 G3；</p><p>将H1最前面的比较点后移，H1→G1H1；下面是比较点和引出点移动后的结构框图：</p><p><img src="https://s2.loli.net/2022/04/25/I6dN7oYJUeQscRT.png" alt="14.png"></p><p>根据上面的等效结构框图，编程思路：</p><p>H2和G3串联H11;</p><p>G1和H1串联H22；</p><p>G2和H11,H22,H1构成负反馈结构G22；</p><p>G1,G22,G3构成串联结构G44;</p><p>G44与G4并联为整个系统结构sys；</p><h5 id="3-源代码-1"><a href="#3-源代码-1" class="headerlink" title="3.源代码"></a><strong>3.源代码</strong></h5><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clc;<span class="comment">%清空命令行窗口</span></span><br><span class="line">syms H1 H2 H3 G1 G2 G3 G4;<span class="comment">%定义符号变量</span></span><br><span class="line">H11=H2*G3;<span class="comment">%H2、H3构成串联结构</span></span><br><span class="line">H22=G1*H1;<span class="comment">%G1和H1构成串联结构</span></span><br><span class="line">G22=G2/(<span class="number">1</span>+(H11-H22+H1)*G2);<span class="comment">%三个反馈并联，然后与G2构成总的负反馈</span></span><br><span class="line">G44=G1*G22*G3;<span class="comment">%三部分串联</span></span><br><span class="line">sys=G44+G4<span class="comment">%中间所有合并的结构与G4并联，不加分号控制台打印输出结果</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4-实验结果-1"><a href="#4-实验结果-1" class="headerlink" title="4.实验结果"></a>4.实验结果</h5><p><img src="https://s2.loli.net/2022/04/25/xj1LgqPRoadMXT3.png" alt="15.png"></p><p>与实际计算结果完全一致</p><h4 id="四、-实验心得与收获"><a href="#四、-实验心得与收获" class="headerlink" title="四、  实验心得与收获"></a><strong>四、</strong>  <strong>实验心得与收获</strong></h4><p>略</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;运用MATLAB完成传递函数的表示和求解&quot;&gt;&lt;a href=&quot;#运用MATLAB完成传递函数的表示和求解&quot; class=&quot;headerlink&quot; title=&quot;运用MATLAB完成传递函数的表示和求解&quot;&gt;&lt;/a&gt;&lt;strong&gt;运用MATLAB完成传递函数的表示和</summary>
      
    
    
    
    <category term="实验报告" scheme="http://example.com/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="自动控制原理实验" scheme="http://example.com/tags/%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>山东大学 自动控制原理实验1、2</title>
    <link href="http://example.com/2022/04/25/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6-%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C1%E3%80%812/"/>
    <id>http://example.com/2022/04/25/%E5%B1%B1%E4%B8%9C%E5%A4%A7%E5%AD%A6-%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C1%E3%80%812/</id>
    <published>2022-04-25T08:29:04.000Z</published>
    <updated>2022-05-02T10:41:38.514Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验一"><a href="#实验一" class="headerlink" title="实验一"></a>实验一</h2><p><em>阅读书：1-5节，学习MATLAB的相关知识及应用</em></p><h2 id="实验二-运用MATLAB完成传递函数的表示与求解"><a href="#实验二-运用MATLAB完成传递函数的表示与求解" class="headerlink" title="实验二    运用MATLAB完成传递函数的表示与求解"></a>实验二    <strong>运用MATLAB完成传递函数的表示与求解</strong></h2><p><em>阅读书：2-5节（用printsys或simplify（G）函数显示必要的结果）</em></p><h4 id="一-实验内容"><a href="#一-实验内容" class="headerlink" title="一    实验内容"></a>一    实验内容</h4><p>自行设计并画出一个包含串联、并联、局部反馈以及主反馈的自动控制系统结构图，设定每个环节的传递函数（至少要包括除延迟环节之外的5种基本环节），并编程实现结构图总传递函数的表示和求解（要求有引出点移动或比较点移动等效）</p><h4 id="实验要求"><a href="#实验要求" class="headerlink" title="实验要求"></a>实验要求</h4><p>针对实验内容得到的传递函数</p><ol><li>写出多项式形式或零极点函数</li><li>完成多项式形式与零极点形式的相互转换</li></ol><h4 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h4><h5 id="1-设计结构框图"><a href="#1-设计结构框图" class="headerlink" title="1.设计结构框图"></a>1.设计结构框图</h5><p><img src="https://s2.loli.net/2022/04/25/hAe1G9jVsXNuMnF.png" alt="1frame.png"></p><h5 id="2-结构框图可行性分析"><a href="#2-结构框图可行性分析" class="headerlink" title="2.结构框图可行性分析"></a><strong>2.结构框图可行性分析</strong></h5><h6 id="1-基本结构分析"><a href="#1-基本结构分析" class="headerlink" title="(1) 基本结构分析"></a><strong>(1)</strong> <strong>基本结构分析</strong></h6><p>G1,G2,G3构成基本的串联结构，</p><p>将上面等效化简后，与G4构成并联基本结构</p><p>H1和H2构成主反馈的部分</p><p>H1、H2、H3单独都是局部反馈</p><p>于是，该结构包含三种基本结构的四种形式，这一点是可行的。</p><h6 id="2-比较点和引出点分析"><a href="#2-比较点和引出点分析" class="headerlink" title="(2) 比较点和引出点分析"></a><strong>(2)</strong> <strong>比较点和引出点分析</strong></h6><p>等效结构图时，如果有交叉需要进行引出点或者比较点的移动，在上述结构框图中H2与下方的H3是存在交叉的，因此在结构图等效化简的时候是涉及到比较点（或者引出点）移动的，于是乎，这一点也符合题目的要求。</p><p>综合可得，经过简单的分析，该系统基本符合题目的基本要去，每个基本环节的传递函数需要后续的分析确定。</p><h5 id="3-设定传递函数"><a href="#3-设定传递函数" class="headerlink" title="3.设定传递函数"></a><strong>3.设定传递函数</strong></h5><p>常见的六种基本环节分别为比例环节、微分环节、惯性环节、积分环节、振荡环节和延迟环节。本实验中要求的是需要包含前五种基本环节。延迟环节的传递函数在课本一二章的示例中并未涉及到相关表达形式，这可能就是不涉及到这项内容的原因之一。下面是五种基本环节的传递函数形式：</p><p><img src="https://s2.loli.net/2022/04/25/P6xAcDYjB5RkEeK.png" alt="2.png"></p><p>根据上述的五种基本环节的传递函数，初步确定设计的结构框图中各个传递函数的值，如下：</p><p><img src="https://s2.loli.net/2022/04/25/2Ix3rBnL4UlW5q1.png" alt="3.png"></p><h5 id="4-分析化简结构，设计代码"><a href="#4-分析化简结构，设计代码" class="headerlink" title="4.分析化简结构，设计代码"></a><strong>4.分析化简结构，设计代码</strong></h5><h6 id="分析简化结构："><a href="#分析简化结构：" class="headerlink" title="分析简化结构："></a><strong>分析简化结构：</strong></h6><p>将的H2比较点前移到H1的比较点位置，系统结构框图如下图所示：</p><p><img src="https://s2.loli.net/2022/04/25/Tc7LXf1xPut2dJs.png" alt="4.png"></p><h6 id="编程思路"><a href="#编程思路" class="headerlink" title="编程思路"></a><strong>编程思路</strong></h6><p>(1) 计算将G1和G2串联</p><p>(2) 计算G1’与H3组成的反馈子系统 </p><p>(3) 计算G3与G4组成的并联子系统</p><p>(4) 计算G1、G2、H3与G3、G4组成的串联系统</p><p>(5) 计算1/G1与H1组成的并联系统</p><p>(6) 计算1/G1、H1与H2组成的串联系统</p><p>(7) 计算主网络子系统与主反馈组成的闭环系统传递函数</p><h4 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">G1=<span class="number">2</span>;G2=tf([<span class="number">2</span> <span class="number">0</span>],[<span class="number">1</span>]);G3=tf([<span class="number">4</span> <span class="number">1</span>],[<span class="number">1</span> <span class="number">0</span>]);</span><br><span class="line">G4=tf([<span class="number">4</span> <span class="number">1</span>],[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]);<span class="comment">%前向的各个环节的传递函数</span></span><br><span class="line">H1=tf([<span class="number">1</span>],[<span class="number">1</span> <span class="number">0</span>]);H2=tf([<span class="number">1</span>],[<span class="number">1</span> <span class="number">2</span>]);H3=<span class="number">1</span>;<span class="comment">%反馈环节的传递函数</span></span><br><span class="line">HH=<span class="number">0.5</span>;<span class="comment">%H2比较点前移的等效子系统1/G1</span></span><br><span class="line">sys1=series(G1,G2);<span class="comment">%计算由G1和G2组成的子回路，由于比价简单的结构，加上分号，不会显示结果</span></span><br><span class="line">sys2=feedback(sys1,H3)<span class="comment">%计算G1、G2、H3组成的反馈子回路，去掉分号，在命令窗口可以观察结果准确与否，便于查错</span></span><br><span class="line">sys3=parallel(G3,G4);<span class="comment">%计算G3、G4组成的并联子系统</span></span><br><span class="line">sys4=series(sys2,sys3)<span class="comment">%计算前后子模块串联的子系统sys4</span></span><br><span class="line">SYS4=zpk(sys4)<span class="comment">%直接观察多项式比较麻烦，化成零极点描述形式，便于观察，去掉分号记得</span></span><br><span class="line">sys5=parallel(H1,HH);<span class="comment">%H1和H2比较点前移的并联结果</span></span><br><span class="line">sys6=series(sys5,H2);<span class="comment">%计算上面整个的反馈子系统的反馈部分</span></span><br><span class="line">sys=feedback(sys4,sys6)<span class="comment">%与主反馈回路构成的系统闭环传递函数，显示记得去掉分号</span></span><br><span class="line">Gzpk=zpk(sys)<span class="comment">%化成零极点描述形式，便于观察</span></span><br><span class="line">printsys(sys.num&#123;<span class="number">1</span>&#125;,sys.den&#123;<span class="number">1</span>&#125;)<span class="comment">%括号中的前项获得分子的系数，后项获得分母的系数</span></span><br><span class="line">                               <span class="comment">%也可以采用simplify（sys）输出，但是，这里输出的结果都不是最简结果</span></span><br><span class="line">                               <span class="comment">%当然也可以将上面想要输出的行的分号去掉也是可以直接输出的</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h4><p><strong>1.</strong>  <strong>Matlab仿真实验结果</strong></p><p><img src="https://s2.loli.net/2022/04/25/MXHA2sDbxBzvidq.png" alt="5.png"></p><p><img src="https://s2.loli.net/2022/04/25/zY6Qu5Rr2FkNTiW.png" alt="6.png"></p><p><strong>2.</strong>  <strong>实际计算结果</strong></p><p><img src="https://s2.loli.net/2022/04/25/sfya6QZXrH3KGet.png" alt="8.png"></p><p><strong>3.</strong>  <strong>对比结果</strong></p><p>可以发现MATLAB仿真实验结果和计算结果稍微有些出入，就是MATLAB仿真最后的结果我们可以看到是没有化简的，也就是传递函数分子分母之间的公因式并没有进行约分。约分化简后，结果保持一致。</p><h4 id="实验心得"><a href="#实验心得" class="headerlink" title="实验心得"></a>实验心得</h4><p>略</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实验一&quot;&gt;&lt;a href=&quot;#实验一&quot; class=&quot;headerlink&quot; title=&quot;实验一&quot;&gt;&lt;/a&gt;实验一&lt;/h2&gt;&lt;p&gt;&lt;em&gt;阅读书：1-5节，学习MATLAB的相关知识及应用&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;实验二-运用MATLAB完成传递函数的</summary>
      
    
    
    
    <category term="实验报告" scheme="http://example.com/categories/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="自动控制原理实验" scheme="http://example.com/tags/%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>Modelsim SE 10.7 使用介绍</title>
    <link href="http://example.com/2022/04/25/Modelsim-SE-%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>http://example.com/2022/04/25/Modelsim-SE-%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</id>
    <published>2022-04-25T06:32:04.000Z</published>
    <updated>2022-05-02T11:16:52.382Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文以仿真软件Modelsim SE 10.7 版本为例，进行介绍modelsim软件的基本使用；</p><p>软件下载，老方法           微信搜索modelsim下载即可找到相关说明贴，按照说明下载完成安装即可；</p><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><p>以FPGA实验的仿真为例，进行介绍</p><h6 id="首先需要在Quartus软件中生成源代码文件和激励块文件"><a href="#首先需要在Quartus软件中生成源代码文件和激励块文件" class="headerlink" title="首先需要在Quartus软件中生成源代码文件和激励块文件"></a>首先需要在Quartus软件中生成源代码文件和激励块文件</h6><p>书写的格式和内容参照相关课本资料，以m5序列码的仿真威力，生成m5.v文件和test_m5.v激励块文件（testbench）</p><h6 id="打开现在好的modelsim软件。点击左上角新建工程文件："><a href="#打开现在好的modelsim软件。点击左上角新建工程文件：" class="headerlink" title="打开现在好的modelsim软件。点击左上角新建工程文件："></a>打开现在好的modelsim软件。点击左上角新建工程文件：</h6><p><img src="https://s2.loli.net/2022/04/25/UCgOZRdGKNlqLIp.png" alt="1.png"></p><h6 id="输入工程名（随便）点击OK"><a href="#输入工程名（随便）点击OK" class="headerlink" title="输入工程名（随便）点击OK"></a>输入工程名（随便）点击OK</h6><p><img src="https://s2.loli.net/2022/04/25/wc4bmWsZ63Vn5Sl.png" alt="2.png"></p><h6 id="在弹出来的界面选择添加文件"><a href="#在弹出来的界面选择添加文件" class="headerlink" title="在弹出来的界面选择添加文件"></a>在弹出来的界面选择添加文件</h6><p><img src="https://s2.loli.net/2022/04/25/9vazjixILAQCMYJ.png" alt="3.png"></p><h6 id="添加文件，添加完成点击OK"><a href="#添加文件，添加完成点击OK" class="headerlink" title="添加文件，添加完成点击OK"></a>添加文件，添加完成点击OK</h6><p><img src="https://s2.loli.net/2022/04/25/uFaQ7AxVcb2hnzZ.png" alt="4.png"></p><h6 id="点击上方菜单中的compile→compile-all"><a href="#点击上方菜单中的compile→compile-all" class="headerlink" title="点击上方菜单中的compile→compile all"></a>点击上方菜单中的compile→compile all</h6><h6 id="编译完成后，显示没有错误，如果有误请修改你的源代码；可以首先在quartus中编译确保无误后在导入："><a href="#编译完成后，显示没有错误，如果有误请修改你的源代码；可以首先在quartus中编译确保无误后在导入：" class="headerlink" title="编译完成后，显示没有错误，如果有误请修改你的源代码；可以首先在quartus中编译确保无误后在导入："></a>编译完成后，显示没有错误，如果有误请修改你的源代码；可以首先在quartus中编译确保无误后在导入：</h6><p><img src="https://s2.loli.net/2022/04/25/Q1HhPiMZFSGunqI.png" alt="8.png"></p><h6 id="点击左下角库library"><a href="#点击左下角库library" class="headerlink" title="点击左下角库library"></a>点击左下角库library</h6><p><img src="https://s2.loli.net/2022/04/25/M8mVEg7wfCBZDsI.png" alt="9.png"></p><h6 id="在界面中选择work左侧的加号，打开工作"><a href="#在界面中选择work左侧的加号，打开工作" class="headerlink" title="在界面中选择work左侧的加号，打开工作"></a>在界面中选择work左侧的加号，打开工作</h6><p><img src="https://s2.loli.net/2022/04/25/wI3UcgKJjvWfRAq.png" alt="10.png"></p><h6 id="选择testbench文件，右键选择simulation。如下所示："><a href="#选择testbench文件，右键选择simulation。如下所示：" class="headerlink" title="选择testbench文件，右键选择simulation。如下所示："></a>选择testbench文件，右键选择simulation。如下所示：</h6><p><img src="https://s2.loli.net/2022/04/25/obNe3hKkq5iXwOF.png" alt="11.png"></p><h6 id="仿真会出现一个新的界面，等待加载完成后，选择激励文件，右键，按照如下操作："><a href="#仿真会出现一个新的界面，等待加载完成后，选择激励文件，右键，按照如下操作：" class="headerlink" title="仿真会出现一个新的界面，等待加载完成后，选择激励文件，右键，按照如下操作："></a>仿真会出现一个新的界面，等待加载完成后，选择激励文件，右键，按照如下操作：</h6><p><img src="https://s2.loli.net/2022/04/25/UW2rfihNvVX5M46.png" alt="12.png"></p><h6 id="此时会出现仿真界面，但是并没有波形，如下图："><a href="#此时会出现仿真界面，但是并没有波形，如下图：" class="headerlink" title="此时会出现仿真界面，但是并没有波形，如下图："></a>此时会出现仿真界面，但是并没有波形，如下图：</h6><p><img src="https://s2.loli.net/2022/04/25/fD4nvdXcs9HQkI3.png" alt="13.png"></p><h6 id="回到上一个界面，点击上放菜单中的simulate→run右run-all"><a href="#回到上一个界面，点击上放菜单中的simulate→run右run-all" class="headerlink" title="回到上一个界面，点击上放菜单中的simulate→run右run-all"></a>回到上一个界面，点击上放菜单中的simulate→run右run-all</h6><p><img src="https://s2.loli.net/2022/04/25/VsKdBIXWbUMo2wH.png" alt="14.png"></p><h6 id="再回到仿真界面，出现仿真波形，成功"><a href="#再回到仿真界面，出现仿真波形，成功" class="headerlink" title="再回到仿真界面，出现仿真波形，成功"></a>再回到仿真界面，出现仿真波形，成功</h6><p><img src="https://s2.loli.net/2022/04/25/gSD4WYJ63X95mwC.png" alt="15.png"></p><h6 id="如果想结束当前仿真，在上一个界面的simulate中点击end-simulation"><a href="#如果想结束当前仿真，在上一个界面的simulate中点击end-simulation" class="headerlink" title="如果想结束当前仿真，在上一个界面的simulate中点击end simulation"></a>如果想结束当前仿真，在上一个界面的simulate中点击end simulation</h6><p><img src="https://s2.loli.net/2022/04/25/l6VFapvdK9Z7Lrk.png" alt="16.png"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文主要针对FPGA实验的仿真，进行了简单的介绍；其他基本仿真动作的使用请参照官方说明。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本文以仿真软件Modelsim SE 10.7 版本为例，进行介绍modelsim软件的基本使用；&lt;/p&gt;
&lt;p&gt;软件下载，老方法     </summary>
      
    
    
    
    <category term="软件工具" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="常用软件" scheme="http://example.com/tags/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Quartus13.1使用介绍</title>
    <link href="http://example.com/2022/04/25/Quartus13-1%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>http://example.com/2022/04/25/Quartus13-1%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</id>
    <published>2022-04-25T05:57:52.000Z</published>
    <updated>2022-05-02T11:17:07.052Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>微信搜索quartus相关内容可进行下载；</p><p>官网下载；</p><p>具体步骤略</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>网上的破解方式很多，就不在这里列举；</p><p>如果不想破解，本文提供一个简单的方式，无限制使用quartus软件；</p><p>quartus软件可以免费试用30天，就是利用此bug，无限试用30天—修改电脑时间至安装的30天内：</p><p>不会修改的看下图：</p><p><img src="https://s2.loli.net/2022/04/25/katEBVr4bUNDemY.png" alt="time.png"></p><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><p>以FPGA的实验为例，Verilog HDL语言</p><h6 id="打开工程"><a href="#打开工程" class="headerlink" title="打开工程"></a>打开工程</h6><p>修改完时间后，打开工程选择下面的选项：</p><p><img src="https://s2.loli.net/2022/04/25/YZJfDpN1mOdoyTV.png" alt="using.png"></p><h6 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a>新建工程</h6><p><img src="https://s2.loli.net/2022/04/25/Q8coKGnl9dNxTrM.png" alt="step1.png"></p><p>工程路径不要有中文</p><p>工程项目名和module名保持一致（test仅是测试用）</p><p><img src="https://s2.loli.net/2022/04/25/iNW5dMl78OE6UAQ.png" alt="step2.png"></p><h6 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h6><p>这里选择Verilog语言</p><p><img src="https://s2.loli.net/2022/04/25/srHP4TWNV1wAeJ3.png" alt="step3.png"></p><h6 id="编辑源代码"><a href="#编辑源代码" class="headerlink" title="编辑源代码"></a>编辑源代码</h6><p>保存文件名和module名保持一致，例 m5.v</p><p><img src="https://s2.loli.net/2022/04/25/AJXZoPUrw2xVtMz.png" alt="s4.png"></p><h6 id="启动仿真"><a href="#启动仿真" class="headerlink" title="启动仿真"></a>启动仿真</h6><p>包含编译操作，如果有误会报错</p><p><img src="https://s2.loli.net/2022/04/25/dpo2Fg1ce37XMbk.png" alt="s5.png"></p><p>编译成功的界面：</p><p><img src="https://s2.loli.net/2022/04/25/qLIYDemKJl6Bfb5.png" alt="s6.png"></p><h6 id="仿真"><a href="#仿真" class="headerlink" title="仿真"></a>仿真</h6><p>quartus提供了简单的时序仿真分析，具体步骤见下：</p><p>新建文件，选择VWF</p><p><img src="https://s2.loli.net/2022/04/25/H5JgYOufZ6abXew.png" alt="s7VWF.png"></p><p>新建完成后出现如下界面：</p><p><img src="https://s2.loli.net/2022/04/25/wN4EZrb3TjSQ9en.png" alt="s8.png"></p><p>双击左侧空白区域，添加引脚：</p><p><img src="https://s2.loli.net/2022/04/25/JXhdWGb5O1iQkwp.png" alt="s9.png"></p><p>点击Node Finder…</p><p><img src="https://s2.loli.net/2022/04/25/Vs7Fd9CNTjy6b84.png" alt="s10.png"></p><p>点击List</p><p><img src="https://s2.loli.net/2022/04/25/Sgx8uhPd1BEC45s.png" alt="s11.png"></p><p>将引脚全部移动到右侧</p><p><img src="https://s2.loli.net/2022/04/25/ycdpPxkuDTaStXA.png" alt="s10wave.png"></p><p>点击左侧引脚，然后点击上方提供的时序输入，具体就不再介绍</p><p><img src="https://s2.loli.net/2022/04/25/qRxp47uePCDVOQb.png" alt="s11start.png"></p><p>点击开始仿真，出现如下界面：</p><p><img src="https://s2.loli.net/2022/04/25/iVOEKlRqptZGHh5.png" alt="s12.png"></p><p>加载结束后，出现仿真结果</p><p><img src="https://s2.loli.net/2022/04/25/437PGtoMSNc1fDp.png" alt="s13.png"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Quartus软件自带的仿真工具使用简单，由于简单单一，往往没有我们需要的输入时序波形，很多情况下并不适合我们的工程仿真使用；</p><p>真正可以做到任何条件的仿真，还得使用Modelsim仿真软件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a href=&quot;#安装步骤&quot; class=&quot;headerlink&quot; title=&quot;安装步骤&quot;&gt;&lt;/a&gt;安装步骤&lt;/h2&gt;&lt;p&gt;微信搜索quartus相关内容可进行下载；&lt;/p&gt;
&lt;p&gt;官网下载；&lt;/p&gt;
&lt;p&gt;具体步骤略&lt;/p&gt;
&lt;h2 id=&quot;简介</summary>
      
    
    
    
    <category term="软件工具" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="常用软件" scheme="http://example.com/tags/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
</feed>
